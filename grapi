

ï»¿{
    "swagger": "2.0",
    "info": {
        "description": "Gravity REST API (GRAPI) provides programmatic access to the richness of Gravity services.\n\nGravity REST server can consume these media types:\n - application/json, for JSON\n - application/x-www-form-urlencoded\n - multipart/form-data, for file upload\n\nbut produces exclusively JSON.\n\n### Some terminology bits to bootstrap with\n Before delving into GRAPI, let's introduce some words that are going to be your helping friends towards grasping Gravity essence. \n \n There are two main cogs in Gravity engine, Services and entities:\n \n * Services such as ItemService managing work items whereabouts, UserAdminService taking care of users, FilterService filtering out difficulties \n out of your way. And the rest that you'll meet in this API and whose names suggest what they do. Some are exposed in this API and many others are working ants in the \n shadow keeping Graviy balance. Gravity services are specialized each in what it does best, hence the targeted url in requests.\n \n * Entities such as workflows, work items, users, applications, filters, comments and so many others.\n * * All Gravity entities are persistent (but not every Gravity object is an entity), so throughout this API docs, we'll use the word  ```'entity' ``` to refer to a persistent Gravity object.\n    Two other words you'll also stumble upon are:  ```'extendable' ``` and  ```'authorizable'```.\n      \n     ```extendables``` are a sub-class of entities that can be extended with new fields. And so are most entities.\n      \n     ```authorizables``` are a sub-class of entities that you'll need right authority to approach. As rule of thumb, every authorizable is an extendable.\n    \n     We'll make such sub-typing obvious in this docs through tags (i.e. titles under which API requests are grouped for ease of use) sub-paths.\n    \n     This way, the following tag example: ```go / e / x / a / Work Item``` reads as follows: a work item is a Gravity object which is an authorizable, extendable and a persistent entity at the same time.\n     And of course, here are the used abbreviations in tags for later reference:\n     ```go``` stands for Gravity Object, ```e``` for Entity, ```x``` for Extendable,  ```a``` for Authorizable and ```s``` for Service.\n\n### Just post it!\nGRAPI relies exclusively on HTTP method: POST. Semantics of any\ninteraction with Gravity services is, therefore, conveyed by the mandatory GRAPI method in your\nrequest. A GRAPI method is a predefined dotted sentence Gravity\tcan understand.\n\n***For instance:***  ```gravity.rest.method.itemservice.item.count.items.reported.by.user``` instructs Gravity itemservice to\ncount and return how many work items somebody has reported. You provide such a GRAPI method in your request using this\nparameter name: ```gravity.rest.method```.\n\n### GRAPI access tokens, what's for?\nFor authentication/authorization sake, almost any GRAPI call to Gravity services must include a valid and active access token. Such \naccess tokens may be generated from withtin Gravity web client by going to the User Admin\nsection where you can't miss it in that page's left side menu. Please note that an access token should be granted necessary\nauthority in order for a request to succeed execution. Mananging access token capabilities is also\ndone within the same User Admin section aforementioned.\n\n### What should I put in my GRAPI Request?\nGravity expects, at least, two fields in any incoming request. The GRAPI method and access token, both mentioned above. \n\n### What do I expect in a GRAPI response?\nAny request reaching Gravity will get a JSONObject response which may contain one of these two options (so never both): \n - Either the result of a successful execution. Look it up in the incoming  JSONObject using the key: ```gravity.rest.result```\n - Or an exception and its stacktrace in case of failure. Look them up in the incoming  JSONObject \n using the keys: ```gravity.rest.error.msg``` and  ```gravity.rest.error.stack.trace```\n\n### OK. Anything else?\n - Yep. Just one more tiny technicality. Although both are fully functional, you might prefer to drop the hashed token in any request URL.\n \n  For instance, you may just use:\n  \n  ```/itemservice``` instead of ```/itemservice/#add-item```\n  \n  ```/useradminservice``` instead of ```/useradminservice/#count-followers```\n  \n  ```/filterservice``` instead of ```/filterservice/#add-filter```\n  \n  .. and so on for all your calls to any Gravity service.",
        "version": "v1",
        "title": "Gravity REST API (GRAPI)",
        "termsOfService": "http://remainsoftware.com",
        "contact": {
            "name": "Remain B.V. The Netherlands - (RemainSoftware.com)",
            "url": "http://remainsoftware.com",
            "email": "wim.jongman@remainsoftware.com"
        },
        "license": {
            "name": "Gravity REST API Terms and Conditions",
            "url": "http://remainsoftware.com"
        }
    },
    "basePath": "/gravity/restful",
    "tags": [
        {
            "name": "go / DataTable"
        },
        {
            "name": "go / Database"
        },
        {
            "name": "go / Entity"
        },
        {
            "name": "go / Template"
        },
        {
            "name": "go / e / API Access Token Context"
        },
        {
            "name": "go / e / Authorizable-Context"
        },
        {
            "name": "go / e / Capability"
        },
        {
            "name": "go / e / Configuration"
        },
        {
            "name": "go / e / Customized Filter View"
        },
        {
            "name": "go / e / Extendable"
        },
        {
            "name": "go / e / Extended Field"
        },
        {
            "name": "go / e / Filter Condition Field"
        },
        {
            "name": "go / e / Filter Condition Group"
        },
        {
            "name": "go / e / x / Address"
        },
        {
            "name": "go / e / x / Application-Workflow-ItemType"
        },
        {
            "name": "go / e / x / Attachment"
        },
        {
            "name": "go / e / x / Authorizable"
        },
        {
            "name": "go / e / x / Comment"
        },
        {
            "name": "go / e / x / Image | Icon"
        },
        {
            "name": "go / e / x / a / API Access Token"
        },
        {
            "name": "go / e / x / a / Application"
        },
        {
            "name": "go / e / x / a / Dependency"
        },
        {
            "name": "go / e / x / a / Dependency Type"
        },
        {
            "name": "go / e / x / a / Discussion"
        },
        {
            "name": "go / e / x / a / Entity Type"
        },
        {
            "name": "go / e / x / a / Filter"
        },
        {
            "name": "go / e / x / a / Stage"
        },
        {
            "name": "go / e / x / a / Tag"
        },
        {
            "name": "go / e / x / a / User"
        },
        {
            "name": "go / e / x / a / Work Item"
        },
        {
            "name": "go / e / x / a / Work Item Type"
        },
        {
            "name": "go / e / x / a / Work Item TypeSpace"
        },
        {
            "name": "go / e / x / a / Workflow"
        },
        {
            "name": "go / s / AnalyticsService"
        },
        {
            "name": "go / s / ConfigurationAdminService"
        },
        {
            "name": "go / s / DefinitionsService"
        },
        {
            "name": "go / s / FilterService"
        },
        {
            "name": "go / s / ItemService"
        },
        {
            "name": "go / s / LoginService"
        },
        {
            "name": "go / s / TaggingService"
        },
        {
            "name": "go / s / UserAdminService"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/analyticsservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-application": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by application",
                "description": "Count and group items by application. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the application name  and the second one the total items belonging to that application.<br> A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Application</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>MyAndroidApp</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>MyWindowsApp</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: MyAndroidApp has 77 work items whereas MyWindowsApp 99.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsByApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.item.application.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-assignee": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by assignee",
                "description": "Count and group items by assignee. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the assignee name  and the second one the total assignee items.<br> A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Assignee</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Tom</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Jerry</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: Tom has 77 assigned works item whereas Jerry 99.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupByAssignee",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.group.assignees"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-commenter": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by commenter",
                "description": "Count and group items by commenter. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the commenter name  and the second one the total comments made by that commenter.<br> A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Commenter</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Tom</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Jerry</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: Tom has made 77 comments whereas Jerry 79.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleFindTopCommenters",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.top.commenters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-overdue-date": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by overdue date",
                "description": "Return a data table depicting a view of work items with overdue dates. The data table has four columns. A pretty-printed data table example would look like:<br><table style='width:90%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Name</strong></th><th style='text-align:center;'><strong>Amount</strong></th><th style='text-align:center;'><strong>Total</strong></th><th style='text-align:center;'><strong>Percent</strong></th></tr><tr><td style='text-align:center;'>All Work Items</td><td style='text-align:center;'>13</td><td style='text-align:center;'>2608</td><td style='text-align:center;'>0.5%</td></tr><tr><td style='text-align:center;'>Iteration</td><td style='text-align:center;'>4</td><td style='text-align:center;'>56</td><td style='text-align:center;'>7.1%</td></tr></table><br>Then, one would read: 13 items of a total of 2608, which makes 0.5%, are overdue.<br><br><p style='font-style: italic'>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p>",
                "operationId": "handleFetchOverdueItemsStatus",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.overdue.items.status"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-priority": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by priority",
                "description": "Count and group items by priority. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the priority name  and the second one the total items having that priority.<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Priority</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>High</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Low</td><td style='text-align:center;'>9</td></tr></table><br>Then, one would read: there are 77 work item with 'Normal' priority whereas there are 9 with 'Low' priority.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.status\" : 2}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsByPriority",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.priority.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-reporter": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by reporter",
                "description": "Count and group items by reporter. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the reporter name  and the second one the total items he has reported .<br> A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Reporter</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Tom</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Jerry</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: Tom has reported 77 works item whereas Jerry 99.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupByReporter",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.group.reporters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-resolved-status": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by resolved status",
                "description": "Return a data table depicting a view of resolved work items. That is, the ones having a closed, verified or resolved status. The data table has four columns. A pretty-printed data table example would look like:<br><table style='width:90%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Name</strong></th><th style='text-align:center;'><strong>Amount</strong></th><th style='text-align:center;'><strong>Total</strong></th><th style='text-align:center;'><strong>Percent</strong></th></tr><tr><td style='text-align:center;'>All Work Items</td><td style='text-align:center;'>1908</td><td style='text-align:center;'>2608</td><td style='text-align:center;'>73.2%</td></tr><tr><td style='text-align:center;'>Task</td><td style='text-align:center;'>254</td><td style='text-align:center;'>355</td><td style='text-align:center;'>71.5%</td></tr></table><br>Then, one would read: 254 tasks of a total of 355, which makes 71.5%, have been resolved.<br><br><p style='font-style: italic'>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p>",
                "operationId": "handleFetchResolvedItemsStatus",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.resolved.items.status"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-resolver": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by resolver",
                "description": "Count and group items by persons resolver. A resolver is the person an item was still assigned to when that item status was set to closed, resolved or verified.<br>  Return a data table having two columns. The first cell in each row contains, o.a.,  the resolver name and the second one the total solved items.<br> A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Work Item Resolver</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Tom</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Jerry</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: Tom has solved 77 works item whereas Jerry 99.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupByResolver",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.group.resolvers"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-severity": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by severity",
                "description": "Count and group items by severity. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the severity name  and the second one the total items having that severity.<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Severity</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Normal</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>High</td><td style='text-align:center;'>9</td></tr></table><br>Then, one would read: there are 77 work item of Normal serverity whereas there are 9 of High serverity.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsBySeverity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.severity.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-stage": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by stage",
                "description": "Count and group items by stage. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the stage name and the second one the total items belonging to that stage.<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Application</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Dev</td><td style='text-align:center;'>37</td></tr><tr><td style='text-align:center;'>Documentation</td><td style='text-align:center;'>11</td></tr></table><br>Then, one would read: There are 37 work items Dev stage whereas there are another 11 in Documentation stage.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsByStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.item.stage.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-status": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by status",
                "description": "Count and group items by status. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the status name  and the second one the total items having that status.<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Status</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Assigned</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>Reopened</td><td style='text-align:center;'>9</td></tr></table><br>Then, one would read: there are 77 work item with status 'Assigned' whereas there are 9 with status 'Reopened'.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsByStatus",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.status.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-type": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by type",
                "description": "Count and group items by type. Return a data table having two columns.<br> The first cell in each row contains, o.a.,  the type name and the second one the total items having that type.<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Type</strong></th><th style='text-align:center;'><strong>Total</strong></tr><tr><td style='text-align:center;'>Iteration</td><td style='text-align:center;'>77</td></tr><tr><td style='text-align:center;'>ToDo</td><td style='text-align:center;'>79</td></tr></table><br>Then, one would read: there are 77 Iteration whereas 79 ToDo's.<br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.assignee.name\" : \"Tom\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleGroupItemsByType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.item.type.count.groups"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-items-by-unmet-start-date": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart items by unmet start date",
                "description": "Return a data table depicting a view of work items with unmet/missed start dates. The data table has four columns. A pretty-printed data table example would look like:<br><table style='width:90%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Name</strong></th><th style='text-align:center;'><strong>Amount</strong></th><th style='text-align:center;'><strong>Total</strong></th><th style='text-align:center;'><strong>Percent</strong></th></tr><tr><td style='text-align:center;'>All Work Items</td><td style='text-align:center;'>13</td><td style='text-align:center;'>2608</td><td style='text-align:center;'>0.5%</td></tr><tr><td style='text-align:center;'>Iteration</td><td style='text-align:center;'>4</td><td style='text-align:center;'>56</td><td style='text-align:center;'>7.1%</td></tr></table><br>Then, one would read: 13 items of a total of 2608, which makes 0.5%, have unmet start dates.<br><br><p style='font-style: italic'>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p>",
                "operationId": "handleFetchUnmetItemsStartDateStatus",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.unmet.items.start.date.status"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-top-priorities": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart top priorities",
                "description": "Fetch a view of top priority items. A linked pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Work Item </strong></th><th style='text-align:center;'><strong>Priority</strong></tr><tr><td style='text-align:center;'><a href=\"#\">I00442 - Don't forget to drink water</a></td><td style='text-align:center;'>Very High</td></tr></table><br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.status\" : 2}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleFetchTopItemsByPriority",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.top.items.by.severity"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-top-severities": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart top severities",
                "description": "Fetch a view of top severity items. A linked pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Work Item </strong></th><th style='text-align:center;'><strong>Severity</strong></tr><tr><td style='text-align:center;'><a href=\"#\">I00442 - Don't forget to drink water</a></td><td style='text-align:center;'>Blocker</td></tr></table><br><br><p style='font-style: italic'><mark>Note: </mark>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p><br>You can influence the result by providing query criteria (in a map) using work item fields. Example:<br>{\"gravity.rest.item.application.name\" : \"Demo\" , \"gravity.rest.item.priority\" : 3}<br><br>Currently the following fields may be used. Use these keys (See also Work Item model) to provide extra criteria:<ul><li><b>gravity.rest.item.creator.name</b>: work item creator name.<li><b>gravity.rest.item.assignee.name</b>: work item assignee name.<li><b>gravity.rest.item.reporter.name</b>: work item reporter name.<li><b>gravity.rest.item.type.name</b>: work item type name.<li><b>gravity.rest.item.application.name</b>: work item application name.<li><b>gravity.rest.item.stage.name</b>: work item stage name.<li><b>gravity.rest.item.status</b>: work item status (integer) value.<li><b>gravity.rest.item.severity</b>: work item severity (integer) value.<li><b>gravity.rest.item.priority</b>: work item priority (integer) value.</ul>You can also let the result be further filtered out by providing a filter id using:<ul><li><b>gravity.rest.filter.id</b>: a filter id.</ul>Please note that all provided criteria values will be AND-ed in the final query.",
                "operationId": "handleFetchTopItemsBySeverity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.top.items.by.severity"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.request.input",
                        "in": "formData",
                        "description": "A map of extra criteria",
                        "required": false,
                        "type": "Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#chart-totals": {
            "post": {
                "tags": [
                    "go / s / AnalyticsService",
                    "go / DataTable"
                ],
                "summary": "Chart totals",
                "description": "Return a data table depicting a view of total counts of relevant Gravity data. A pretty-printed data table example would look like:<br><table style='width:60%;text-align:center; border: 1px dotted gray;'><tr><th style='text-align:center;'><strong>Property</strong></th><th ><strong>Count</strong></th><th style='text-align:center;'> <strong>Group</strong></th></tr><tr><td style='text-align:center;'>Tasks</td><td style='text-align:center;'>771</td><td style='text-align:center;'>Work Items</td></tr><tr><td style='text-align:center;'>Public Filters</td><td style='text-align:center;'>34</td><td style='text-align:center;'>Filters</td></tr><tr><td style='text-align:center;'>Handled Events</td><td style='text-align:center;'>934</td><td style='text-align:center;'>Events</td></tr><tr><td style='text-align:center;'>Roles</td><td style='text-align:center;'>9</td><td style='text-align:center;'>Users</td></tr></table><br><br><br><p style='font-style: italic'>A Gravity DataTable is an abstract data structure that can be used as input for concrete charts such as  tables, pies, etc,... Please refer to the DataTable model for further insight about its rows, columns and cells internal data structure.</p>",
                "operationId": "handleFetchTotals",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.analyticsservice.fetch.totals"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataTable"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/analyticsservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/analyticsservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/analyticsservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/analyticsservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/analyticsservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/analyticsservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#add-factory-configuration": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / e / Configuration"
                ],
                "summary": "Add a factory configuration",
                "description": "Create a new factory configuration with the givn factory PID. Please refer to the OSGi ConfigurationAdmin docs for more info.",
                "operationId": "handleCreateFactoryConfiguration",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.create.factory.configuration"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.factory.pid",
                        "in": "formData",
                        "description": "Configuration factory PID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#delete-configuration": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / e / Configuration"
                ],
                "summary": "Delete a configuration",
                "description": "Delete the configuration with the givn PID. Return true if successful.",
                "operationId": "handleDeleteConfiguration",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.delete.configuration"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.pid",
                        "in": "formData",
                        "description": "Configuration PID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-active-jdbc-drivers": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / Database"
                ],
                "summary": "Fetch active JDBC drivers",
                "description": "Fetch a list of representations of the currently running database driver services within the Gravity instance being called.",
                "operationId": "handleFetchTargetDatabases",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.fetch.target.databases"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Database"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-configurations-with-pid": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / e / Configuration"
                ],
                "summary": "Fetch configurations with PID (Persistent ID).",
                "description": "Fetch a list of cofigurations with the given PID. If none is found and the parameter: <b>gravity.rest.configuration.create.if.inexistent </b> is set to true, then one default configuration with the given PID is created, persisted then returned in the list. A pid can be any arbitrary string you use to statically identify and retrieve (one ore more) configurations. A configuration entity has a properties map where you can store arbitrary values.",
                "operationId": "handleFetchConfigurations",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.fetch.configurations"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.pid",
                        "in": "formData",
                        "description": "Configuration PID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.create.if.inexistent ",
                        "in": "formData",
                        "description": "Create this configuration if inexistent?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Configuration"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-plug-n-play-templates": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / Template"
                ],
                "summary": "Fetch Plug & Play templates",
                "description": "Fetch a list of templates being used to create pre-built / Plug&Play entities such as workflows and applications",
                "operationId": "handleFetchPlugAndPlayTemplates",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.fetch.plug.and.play.templates"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Template"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#ping-configuration-service": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService"
                ],
                "summary": "Ping configuration service",
                "description": "Ping the configuration service to check whether Graviy services are reachable/running. Return an empty Json object indicating you've reached Gravity.",
                "operationId": "handlePingConfigurationService",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.ping"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JSONObject"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#update-configuration": {
            "post": {
                "tags": [
                    "go / s / ConfigurationAdminService",
                    "go / e / Configuration"
                ],
                "summary": "Update a configuration",
                "description": "Update the configuraton having the given PID. Return the freshly updated configuration entity.",
                "operationId": "handleSetConfiguration",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.configurationadminservice.set.configuration"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.pid",
                        "in": "formData",
                        "description": "Configuration PID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.name",
                        "in": "formData",
                        "description": "Configuration PID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.factory.pid",
                        "in": "formData",
                        "description": "Configuration PID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.configuration.properties",
                        "in": "formData",
                        "description": "Configuration properties map",
                        "required": false,
                        "type": "java.util.Map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    }
                }
            }
        },
        "/configurationadminservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-application": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Create a new application",
                "description": "Create and persist a new application with the given name. Return the newly created application",
                "operationId": "createApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.name",
                        "in": "formData",
                        "description": "Application name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-application-to-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Application"
                ],
                "summary": "Add workflow to application",
                "description": "Add the application with the given id to the workflow with the given id. Return the freshly updated application.",
                "operationId": "handleAddWorkflowToApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.add.workflow.to.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-dependency-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency",
                    "go / Entity",
                    "go / e / x / a / Dependency Type"
                ],
                "summary": "Add dependency type",
                "description": "Create a new dependency type with the given options:<ul><li>Name: the name of this new dependency/relation type. E.g.: Parent Of, Contains, Duplicate Of, etc.<li>Reverse name: E.g.: Child Of, Contained By, Duplicate Of, etc.<li>Cardinality: Integer value: ONE_TO_ONE=0, ONE_TO_MANY=1,\tMANY_TO_ONE=2 or MANY_TO_MANY=3.<li>Is it base type meant? Boolean: Whether this new dependency type is meant for base entity types.<li>Icon id: The id of the icon to be used by this new dependency type. Icon must already exists in the store prior to making this request.</ul> Return the freshly created dependency type.",
                "operationId": "handleCreateDependencyType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.dependency.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.name",
                        "in": "formData",
                        "description": "Dependency type name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.reversname",
                        "in": "formData",
                        "description": "Dependency type reverse",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.cardinality",
                        "in": "formData",
                        "description": "Dependency type cardinality",
                        "required": false,
                        "type": "integer",
                        "default": 3
                    },
                    {
                        "name": "gravity.rest.dependencytype.isbase",
                        "in": "formData",
                        "description": "Is it base type?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.dependencytype.description",
                        "in": "formData",
                        "description": "Dependency type description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.icon.id",
                        "in": "formData",
                        "description": "Icon id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-entity-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Add entity type",
                "description": "Create a new entity type with the given name. Return the newly created entity type.",
                "operationId": "handleCreateEntityType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.entity.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.name",
                        "in": "formData",
                        "description": "Entity type name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.tyepeable.classname",
                        "in": "formData",
                        "description": "Typeable (fully qualified) class name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.is.basetype",
                        "in": "formData",
                        "description": "Is it a base type",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.entitytype.icon.id",
                        "in": "formData",
                        "description": "TypeSpace icon id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Entity Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-entity-type-dependency": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type",
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add entity type dependency",
                "description": "Add a new dependency between two entity types: one is the source and the other is the target. The being added dependency is of the type with the given id. Return the freshly created dependency.",
                "operationId": "handleCreateEntityTypeDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.entitytype.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field",
                "description": "Add a new extended field to the extendable entity having the given id. Return the newly added extended field.<br>The type of the being added extended field: (Type provided with parameter<b> gravity.rest.field.extended.type</b>) may have one of the following values:<ul><li>secret: for a field that will hold encrypted values, e.g.; passwords.<li>string: for a field that will hold string values.<li>number: for a field that will hold numeric values.<li>boolean: for a field that will hold booleans.<li>bytearray: for a field that will hold byte-array values.<li>date: for a field that will hold dates.<li>entity: for a field that will hold entities as values. Here you'll also need to provide one more info:<ul><li>gravity.rest.entity.class.name: a Java full-package name of the interface (an IPersistable sub-type) of acceptable entities type. e.g., com.remainsoftware.gravity.model.authority.IUser for a field that has users as values.</li></ul></li><li>entitytype: for a field that will hold entity types as values. Here you'll need to provide one more info:<ul><li>gravity.rest.entitytype.id: the id of the entityType this field can hold.</li></ul></li></ul>",
                "operationId": "handleAddFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.extendable.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The field name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.class.name",
                        "in": "formData",
                        "description": "The field class name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "The entity type id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.label",
                        "in": "formData",
                        "description": "The field label",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.weight",
                        "in": "formData",
                        "description": "The field weight",
                        "required": false,
                        "type": "Integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-extended-field-by-id": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field by id",
                "description": "Add the (already existing) extended field with the given id to the work item having the given id. Return true if successful.",
                "operationId": "handleAddFieldExtendedById",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended.by.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extendable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-extended-field-value": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field value",
                "description": "Add a value to the exetnded field with the given id. Return the newly created and added field value.<br>The value should comply with the type of the extended field it is being added to. e.g., a number extended field expects a numeric value, a boolean field a boolean value and so on. Of course, for an extended field that expects an entity as value, the id of the entity (that will be put as value) itself should be provided.",
                "operationId": "handleAddFieldExtendedValue",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.field.extended.add.value"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.value.value",
                        "in": "formData",
                        "description": "The value",
                        "required": true,
                        "type": "Object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-item-type-space": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Add work item typeSpace",
                "description": "Create a new work item typeSpace with the given name. An optional icon to be used by this new typeSpace may be provided. The icon with the given id should already be uploaded prior to making this call. Return the newly created typeSpace.",
                "operationId": "handleCreateItemTypeSpace",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.item.type.space"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.name",
                        "in": "formData",
                        "description": "TypeSpace name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.icon.id",
                        "in": "formData",
                        "description": "TypeSpace icon id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-master-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Add master workflow",
                "description": "Create a new master workflow with the given name. Return the newly created workflow. Only slave workflows can be used to manage applications. Master workflows are merely templates/blueprints.",
                "operationId": "handleCreateMasterWorkFlow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.master.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.name",
                        "in": "formData",
                        "description": "Workflow name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-next-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Add next stage",
                "description": "Add/Make a stage as a next one to some other stage. Both stages must already belong to the same workflow prior to making this call. Return the freshly updated stage (the one receiving a next stage).",
                "operationId": "handleAddNextStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.add.next.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.next.stage.id",
                        "in": "formData",
                        "description": "Next stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-peer-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Add peer stage",
                "description": "Create a new peer from the master-peer stage having the given id. Return the newly created peer stage. A peer stage is also a master stage but it has been created from another master stage that is the origin and which we call a master-peer. So a slave stage comes from a peer stage, and a peer stage comes from a master-peer stage.",
                "operationId": "handleStageCreatePeer",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.create.peer"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Master stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-previous-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Add previous stage",
                "description": "Add/Make a stage as a previous one to some other stage. Both stages must already belong to the same workflow prior to making this call. Return the freshly updated stage (the one receiving a previous stage).",
                "operationId": "handleAddPrevStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.add.prev.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.prev.stage.id",
                        "in": "formData",
                        "description": "Previous stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-slave-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Add slave stage",
                "description": "Create a new slave from the peer stage having the given id. Return the newly created slave stage. A peer stage is also a master stage but it has been created from another master stage that is the origin and which we call a master-peer. So a slave stage comes from a peer stage, and a peer stage comes from a master-peer stage.",
                "operationId": "handleStageCreateSlave",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.create.slave"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Master stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-slave-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Add slave workflow",
                "description": "Create a new slave/copy workflow from the master workflow having the given id. Return the newly created slave workflow. Only slave workflows can be used to manage applications. Master workflows are merely templates/blueprints.",
                "operationId": "handleCreateSlaveWorkFlow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.slave.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Master workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Add new stage",
                "description": "Create, in the workflow with the given id, a new stage with the given name. Return the freshly created stageStage types: <ul><li>PHYSICAL=<b>1</b><li>ACTIVITY=<b>2</b><li>EVENT=<b>3</b><li>INITIAL=<b>4</b><li>FINAL=<b>5</b><li>STATUS=<b>6</b><li>CHANGE_ATTRIBUTE=<b>7</b></ul>",
                "operationId": "handleCreateStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.name",
                        "in": "formData",
                        "description": "Stage name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.type",
                        "in": "formData",
                        "description": "Stage type",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-type-space-to-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Add typeSpace to workflow",
                "description": "Add the item typeSpace with the given id to the workfow with the given id. Return the freshly updated workflow.",
                "operationId": "handleConnectItemTypeSpaceToWorkflow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.connect.item.type.space.to.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-type-to-typespace": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Add entity type to typeSpace",
                "description": "Add the entity type with the given id to the item typeSpace with the given id. Return the freshly updated typeSpace.",
                "operationId": "handleConnectEntityTypeToItemTypeSpace",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.connect.entity.type.to.item.type.space"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "Item typeSpace id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#add-type-to-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / Application-Workflow-ItemType",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / Application",
                    "go / e / x / a / Work Item Type"
                ],
                "summary": "Add item type to workflow",
                "description": "Add an item type to be used by the given application within the given workflow. Return the newly created entity holding this triple relation.",
                "operationId": "handleAddItemTypeToWorkflow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.add.item.type.to.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application-Workflow-ItemType"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#check-entity-type-capabilities": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Check entity type capabilities",
                "description": "Given an array of capabilites' names and an entity type, check which capability does the caller have on the given entity type. Return a JSONObject with keys being the given capabilites' names and values being check results. Value=true stands for: The requester is authorized for a given capability. false otherwise.<br>.The names of the entity type capabilities that can be checked using this call are:<ul><li><b>gravity.rest.entitytype.capability.create</b>: This capability enables you to create the EntityType.<li><b>gravity.rest.entitytype.capability.read</b>: This capability enables you to read the EntityType.<li><b>gravity.rest.entitytype.capability.update</b>: This capability enables you to edit the EntityType.<li><b>gravity.rest.entitytype.capability.delete</b>: This capability enables you to remove the EntityType.<li><b>gravity.rest.entitytype.capability.workflow</b>: This capability enables you to transfer an item with a specific type.<li><b>gravity.rest.entitytype.capability.connect</b>: This capability enables you to connect the EntityType to another one.<li><b>gravity.rest.entitytype.capability.disconnect</b>: This capability enables you to remove the connection between the EntityTypes.</ul><br>Example array: [gravity.rest.entitytype.capability.create , gravity.rest.entitytype.capability.workflow]",
                "operationId": "handleFetchEntityTypeCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.entity.type.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.type.capabilities.array",
                        "in": "formData",
                        "description": "Array of capabilities to check",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JSONObject"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delet-type-from-type-space": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace",
                    "go / e / x / a / Work Item Type"
                ],
                "summary": "Delete type from typeSpace",
                "description": "Remove the entity type with the given id from the typeSpace with the given id. Return true if the removal was successful",
                "operationId": "handleTypeSpaceRemoveEntityType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.type.space.remove.entity.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-application": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Delete an application",
                "description": "Delete the application with the given id. Return true if successful",
                "operationId": "handleDeleteApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-application-from-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Application"
                ],
                "summary": "Delete application from workflow ",
                "description": "Delete the application with the given id from the workflow with the given id. Return the deleted application.",
                "operationId": "handleRemoveWorkflowFromApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.remove.workflow.from.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-dependency-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency",
                    "go / Entity",
                    "go / e / x / a / Dependency Type"
                ],
                "summary": "Delete dependency type",
                "description": "Delete the dependency type having the given id. Return true if deletion was successflul.",
                "operationId": "handleDeleteDependencyType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.dependency.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-entity-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Delete entity type",
                "description": "Delete the entity type having the given id. Return true if deletion was successful.",
                "operationId": "handleDeleteEntityType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.create.entity.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Delete extended field",
                "description": "Delete the exetnded field with the given id. Return true if successful.",
                "operationId": "handleDeleteFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-icon": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Delete icon",
                "description": "Delete the icon with the given id. Return true if deletion was successful.",
                "operationId": "handleDeleteIcon",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.icon"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.icon.id",
                        "in": "formData",
                        "description": "Icon id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-item-type-space": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Delete work item typeSpace",
                "description": "Delete the work item typeSpace having the given id. Return true if deletion was successful.",
                "operationId": "handleDeleteItemTypeSpace",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.item.type.space"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-next-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Delete next stage",
                "description": "Delete the next stage of some other stage. Return true if the deletion was successful, false otherwise.",
                "operationId": "handleRemoveNextStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.remove.next.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.next.stage.id",
                        "in": "formData",
                        "description": "Next stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-previous-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Delete previous stage",
                "description": "Delete the previous stage of some other stage. Return true if the deletion was successful, false otherwise.",
                "operationId": "handleRemovePrevStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.remove.next.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.prev.stage.id",
                        "in": "formData",
                        "description": "Previous stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Delete stage",
                "description": "Delete the stage with the given id. Return true if deletion was successful.",
                "operationId": "handleDeleteStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#delete-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Delete a workflow",
                "description": "Delete the workflow with the given id. Return true if the deletion was successful.",
                "operationId": "handleDeleteWorkFlow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.delete.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-app-workflow-itemtypes": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / Application-Workflow-ItemType",
                    "go / e / x / a / Application",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Entity Type",
                    "go / e / x / a / Stage",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Fetch [ApplicationLifeCycleItemType] entities",
                "description": "Fetch a list of all [ApplicationLifeCycleItemType] entities. As the name suggests, each of these entities is a triple combination/relation between a workflow, an application and an entity type.<br>The following options may be used in the request to influence how much data to retrieve:<ul><li>Workflow id: If a workflow id is provided, then only ApplicationLifeCycleItemType entities containing the workflow with that id are fetched. Otherwise all ApplicationLifeCycleItemType entities are fetched.<li>Whether to include stages of each workflow in the response as well<li>Whether to include the master workflow in the response as well<li>Whether to include the item typeSpace in the response as well<li>Whether to include the entity typeSpace icon(without image bytes, anyway) data in the response as well</ul>",
                "operationId": "handleFetchAppLifeCycleItemTypes",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.applicationLifeCycleItemTypes"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.include.stages",
                        "in": "formData",
                        "description": "Include stages?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.workflow.include.master.lifecycle",
                        "in": "formData",
                        "description": "Include master Workflow?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.workflow.include.item.type.space",
                        "in": "formData",
                        "description": "Include item typeSpace?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.entitytype.include.icon",
                        "in": "formData",
                        "description": "Include entity type icon?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application-Workflow-ItemType"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-application": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Fetch application",
                "description": "Fetch the application with the given id.",
                "operationId": "handleFetchApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-application-workflows": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Application"
                ],
                "summary": "Fetch application workflows",
                "description": "Fetch workflows the application with the given id belongs to, (is managed within).",
                "operationId": "handleFetchApplicationWorkFlows",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.application.workflows"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.include.stages",
                        "in": "formData",
                        "description": "Include wrokflow stages?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.workflow.include.master.lifecycle",
                        "in": "formData",
                        "description": "Include master Workflow?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.workflow.include.item.type.space",
                        "in": "formData",
                        "description": "Include wrokflow item typeSpace?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Workflow"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-base-dependency-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency Type"
                ],
                "summary": "Fetch base dependency type",
                "description": "Fetch the base of the dependency type with the given id.",
                "operationId": "handleFetchBaseDependencyType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.dependency.type.fetch.base.dependnecy.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-dependency-type-icon": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency Type",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Fetch dependency type icon",
                "description": "Fetch the icon of the dependency type with the given id. Return null if none found.",
                "operationId": "handleFetchDependencyTypeIcon",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.dependency.type.fetch.icon"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.icon.include.bytes",
                        "in": "formData",
                        "description": "Include image content bytes?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Icon"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-entity-type-icon": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Fetch entity type icon",
                "description": "Fetch the icon of the entity type with the given id. Return null if none found.",
                "operationId": "handleFetchEntityTypeIcon",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.entity.type.fetch.icon"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.icon.include.bytes",
                        "in": "formData",
                        "description": "Include image content bytes?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Icon"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-extended-fields-by-name": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch extended fields by name",
                "description": "Fetch a list of extended fields having the given name.",
                "operationId": "handleFetchExtendedFieldsWithName",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.fields.extended.with.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The extended field type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-initial-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch initial stage",
                "description": "Fetch the initial/start stage of the workflow having the given id. Return null if none exists.",
                "operationId": "handleFetchInitialStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.initial.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-item-type-spaces": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Fetch typeSpaces with entity type",
                "description": "Fetch the list of typeSpaces containing the entity type with the given id. That is, typeSpaces the given entity type belongs to.",
                "operationId": "handleFetchItemTypeSpaces",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.item.type.spaces"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item TypeSpace"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-item-user-dependencies": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies between users and work items",
                "description": "Fetch all (definitions) dependencies linking users and work items. For instance, a User following an Issue is a kind of such dependencies. The id of the entity type you provide must refer to some valid definitions work item you already predefined (E.g. Issue, Question and so on). Please note that these dependencies are on definitions level.",
                "operationId": "handleFetchItemUserDependencies",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.item.user.definitions.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-master-peer-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch master peer stage",
                "description": "Fetch the master-peer stage of the peer stage with the given id. A peer stage is also a master stage but it has been created from another master stage that is the origin and which we call a master-peer (we're fetching by this request). So a slave stage comes from a peer stage, and a peer stage comes from a master-peer stage.",
                "operationId": "handleStageFetchMasterPeer",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.master.peer"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Peer stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-master-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch master stage",
                "description": "Fetch the master stage of the one with the given id.",
                "operationId": "handleStageFetchMaster",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.master"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-master-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Fetch master workflow",
                "description": "Fetch the master workflow of the slave workflow having the given id.",
                "operationId": "handleFetchMasterWorkflow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.workflow.fetch.master"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Master workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-next-stages": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch next stages",
                "description": "Fetch the list of next stages of the stage with given id.",
                "operationId": "handleStageFetchNextStages",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.next.stages"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-previous-stages": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch previous stages",
                "description": "Fetch the list of previous stages of the stage with given id.",
                "operationId": "handleStageFetchPrevStages",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.prev.stages"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch stage",
                "description": "Fetch the stage with the given id.",
                "operationId": "handleFetchStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stage-peers": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch stage peers",
                "description": "Fetch peers originally created from the master-peer stage having the given id. A peer stage is also a master stage but it has been created from another master stage that is the origin and which we call a master-peer. So a slave stage comes from a peer stage, and a peer stage comes from a master-peer stage.",
                "operationId": "handleStageFetchPeers",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.peers"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Master stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stage-slaves": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch stage slaves",
                "description": "Fetch the slave stages created from the peer stage having the given id. A peer stage is also a master stage but it has been created from another master stage that is the origin and which we call a master-peer. So a slave stage comes from a peer stage, and a peer stage comes from a master-peer stage.",
                "operationId": "handleStageFetchSlaves",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.slaves"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Master stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stage-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Fetch stage workflow",
                "description": "Fetch the workflow containing the stage with the given id.",
                "operationId": "handleStageFetchWorkflow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.fetch.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stages": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch workflow stage",
                "description": "Fetch a list of all stages belonging to the workflow having the given id",
                "operationId": "handleFetchWorkflowStages",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.workflow.fetch.stages"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-stages-by-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch stages by name",
                "description": "Fetch a list of stages having the given name and belonging to the workflow with the given id.",
                "operationId": "handleFetchStagesByName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.stages.by.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.lifecycle.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.name",
                        "in": "formData",
                        "description": "Stage name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stage"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-type-space-icon": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Fetch typeSpace icon",
                "description": "Fetch the icon of the work item typeSpace having the given id. Return null if none found.",
                "operationId": "handleTypeSpaceFetchIcon",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.type.space.fetch.icon"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "Item typeSpacee id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.icon.include.bytes",
                        "in": "formData",
                        "description": "Include image content bytes?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Icon"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-type-spaces-with-entity-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace",
                    "go / e / x / a / Work Item Type"
                ],
                "summary": "Fetch typeSpaces with entity type",
                "description": "Fetch the list of typeSpaces containing the entity type with the given id. That is, typeSpaces the given entity type belongs to.",
                "operationId": "handleEntityTypeFetchTypeSpaces",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.entity.type.fetch.type.spaces"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item TypeSpace"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Fetch workflow",
                "description": "Fetch the workflow with the given id.",
                "operationId": "handleFetchWorkflow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.fetch.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-workflow-applications": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Application"
                ],
                "summary": "Fetch workflow applications",
                "description": "Fetch a list of all applications being managed within the workflow having the given id",
                "operationId": "handleFetchWorkflowApplications",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.workflow.fetch.applications"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-workflow-slaves": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Fetch workflow slaves",
                "description": "Fetch a list of all slaves/copies created from the master workflow having the given id. Only slave workflows can be used to manage applications. Master workflows are merely templates/blueprints.",
                "operationId": "handleFetchWorkflowSlaves",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.workflow.fetch.slaves"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Master workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Workflow"
                            }
                        }
                    }
                }
            }
        },
        "/definitionsservice/#fetch-workflow-type-space": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Fetch workflow typeSpace",
                "description": "Fetch the typeSpace being used within the workflow with the given id. Return null if none is found.",
                "operationId": "handleFetchWorkflowItemTypeSpace",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.workflow.fetch.item.type.space"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-application": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Update application",
                "description": "Update one or more fields of the application having the given id. Return the freshly updated application.",
                "operationId": "handleUpdateApplication",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.application"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.name",
                        "in": "formData",
                        "description": "Application name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.description",
                        "in": "formData",
                        "description": "Application description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-application-description": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Update application description",
                "description": "Update the description of the application having the given id. Return the freshly updated application.",
                "operationId": "handleUpdateApplicationDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.application.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.description",
                        "in": "formData",
                        "description": "Application description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-application-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Application"
                ],
                "summary": "Update application name",
                "description": "Update the name of the application having the given id. Return the freshly updated application.",
                "operationId": "handleUpdateApplicationName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.application.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.id",
                        "in": "formData",
                        "description": "Application id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.application.name",
                        "in": "formData",
                        "description": "Application name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-dependency-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Dependency",
                    "go / Entity",
                    "go / e / x / a / Dependency Type"
                ],
                "summary": "Update dependency type",
                "description": "Update one ore more fields of the dependency type having the given id. Return the freshly updated dependency type.",
                "operationId": "handleUpdateDependencyType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.dependency.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.name",
                        "in": "formData",
                        "description": "Dependency type name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.reversname",
                        "in": "formData",
                        "description": "Dependency type reverse name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.description",
                        "in": "formData",
                        "description": "Dependency type description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.icon.id",
                        "in": "formData",
                        "description": "Icon id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-entity-type": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Update entity type",
                "description": "Update one or more fields of the entity type having the given id. Return the freshly updated entity type.",
                "operationId": "handleUpdateEntityType",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.entity.type"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.name",
                        "in": "formData",
                        "description": "Entity type name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.description",
                        "in": "formData",
                        "description": "Entity type description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.tyepeable.classname",
                        "in": "formData",
                        "description": "Entity type typeable (fully qualified) class name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Entity Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-entity-type-description": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Update entity type description",
                "description": "Update the description of the entity type having the given id. Return the freshly updated entity type.",
                "operationId": "handleUpdateEntityTypeDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.entity.type.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.description",
                        "in": "formData",
                        "description": "Entity type description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Entity Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-entity-type-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Update entity type name",
                "description": "Update the name of the entity type having the given id. Return the freshly updated entity type.",
                "operationId": "handleUpdateEntityTypeName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.entity.type.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.name",
                        "in": "formData",
                        "description": "Entity type name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Entity Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-entity-type-typeable": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Update entity type typeable",
                "description": "Update the typeable (fully qualified) class name of the entity type having the given id. Return the freshly updated entity type.",
                "operationId": "handleUpdateEntityTypeTypeableClassName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.entity.type.typeable.classname"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "Entity type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.tyepeable.classname",
                        "in": "formData",
                        "description": "Entity type typeable (fully qualified) class",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Entity Type"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-item-type-space": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Update item typeSpace",
                "description": "Update one or more fields of the item typeSpace with the given id. Return the freshly updated typeSpace.",
                "operationId": "handleUpdateItemTypeSpace",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.item.type.space"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.name",
                        "in": "formData",
                        "description": "TypeSpace name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.description",
                        "in": "formData",
                        "description": "TypeSpace description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-item-type-space-description": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Update work item typeSpace description",
                "description": "Update the description of work item typeSpace having the given id. Return the freshly updated typeSpace.",
                "operationId": "handleUpdateItemTypeSpaceDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.item.type.space.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.description",
                        "in": "formData",
                        "description": "TypeSpace description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-item-type-space-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Work Item TypeSpace"
                ],
                "summary": "Update work item typeSpace name",
                "description": "Update the name of the work item typeSpace having the given id. Return the freshly updated typeSpace.",
                "operationId": "handleUpdateItemTypeSpaceName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.item.type.space.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.id",
                        "in": "formData",
                        "description": "TypeSpace id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.itemtypespace.name",
                        "in": "formData",
                        "description": "TypeSpace name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item TypeSpace"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-stage": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Update stage",
                "description": "Update one or more fields of the stage with given id. Return the freshly updated stage.",
                "operationId": "handleUpdateStage",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.stage"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.name",
                        "in": "formData",
                        "description": "Stage name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.description",
                        "in": "formData",
                        "description": "Stage description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-stage-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Update stage name",
                "description": "Update the name of the stage having the given id. Return the freshly updated stage.",
                "operationId": "handleStageSetName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.set.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.name",
                        "in": "formData",
                        "description": "Stage name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-stage-plannability": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Update stage plannability",
                "description": "Set whether the stage with the given id should be set as plannable. Return the freshly updated stage.",
                "operationId": "handleStageSetPlanable",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.set.plannable"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.is.plannable",
                        "in": "formData",
                        "description": "Is stage plannable?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-stage-topic": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Stage"
                ],
                "summary": "Update stage topic",
                "description": "Update the topic of the stage having the given id. Return the freshly updated stage.",
                "operationId": "handleStageSetTopic",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.stage.set.topic"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.id",
                        "in": "formData",
                        "description": "Stage id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.stage.topic",
                        "in": "formData",
                        "description": "Stage topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Stage"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-workflow": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Update workflow",
                "description": "Update one or more fields of the workflow having the given id. Return the freshly updated workflow.",
                "operationId": "handleUpdateWorkFlow",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.workflow"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.name",
                        "in": "formData",
                        "description": "New workflow name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.description",
                        "in": "formData",
                        "description": "New workflow description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-workflow-description": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Update workflow description",
                "description": "Update the description of the workflow having the given id. Return the freshly updated workflow.",
                "operationId": "handleUpdateWorkFlowDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.workflow.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.description",
                        "in": "formData",
                        "description": "New workflow description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#update-workflow-name": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / a / Workflow"
                ],
                "summary": "Update workflow name",
                "description": "Update the name of the workflow having the given id. Return the freshly updated workflow.",
                "operationId": "handleUpdateWorkFlowName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.update.workflow.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.id",
                        "in": "formData",
                        "description": "Workflow id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.workflow.name",
                        "in": "formData",
                        "description": "New workflow name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/definitionsservice/#upload-icon": {
            "post": {
                "tags": [
                    "go / s / DefinitionsService",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Upload icon",
                "description": "Upload an icon to be used in definitions. Return the newly created icon entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUserlogoUpload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.definitionsservice.upload.icon"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.defintions.icon"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Pick an icon to upload:",
                        "in": "formData",
                        "description": "Icon file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Icon"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field",
                "description": "Add a new extended field to the extendable entity having the given id. Return the newly added extended field.<br>The type of the being added extended field: (Type provided with parameter<b> gravity.rest.field.extended.type</b>) may have one of the following values:<ul><li>secret: for a field that will hold encrypted values, e.g.; passwords.<li>string: for a field that will hold string values.<li>number: for a field that will hold numeric values.<li>boolean: for a field that will hold booleans.<li>bytearray: for a field that will hold byte-array values.<li>date: for a field that will hold dates.<li>entity: for a field that will hold entities as values. Here you'll also need to provide one more info:<ul><li>gravity.rest.entity.class.name: a Java full-package name of the interface (an IPersistable sub-type) of acceptable entities type. e.g., com.remainsoftware.gravity.model.authority.IUser for a field that has users as values.</li></ul></li><li>entitytype: for a field that will hold entity types as values. Here you'll need to provide one more info:<ul><li>gravity.rest.entitytype.id: the id of the entityType this field can hold.</li></ul></li></ul>",
                "operationId": "handleAddFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.extendable.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The field name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.class.name",
                        "in": "formData",
                        "description": "The field class name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "The entity type id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.label",
                        "in": "formData",
                        "description": "The field label",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.weight",
                        "in": "formData",
                        "description": "The field weight",
                        "required": false,
                        "type": "Integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-extended-field-by-id": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field by id",
                "description": "Add the (already existing) extended field with the given id to the work item having the given id. Return true if successful.",
                "operationId": "handleAddFieldExtendedById",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended.by.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extendable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-extended-field-value": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field value",
                "description": "Add a value to the exetnded field with the given id. Return the newly created and added field value.<br>The value should comply with the type of the extended field it is being added to. e.g., a number extended field expects a numeric value, a boolean field a boolean value and so on. Of course, for an extended field that expects an entity as value, the id of the entity (that will be put as value) itself should be provided.",
                "operationId": "handleAddFieldExtendedValue",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.field.extended.add.value"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.value.value",
                        "in": "formData",
                        "description": "The value",
                        "required": true,
                        "type": "Object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-filter": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Add a new filter",
                "description": "Create a new filter with the given name and condition group having the given id. The filter is to be used on entities with the given name. The entity name may be one of the following: [WORKDOCUMENT=01, APPLICATION=02, LIFECYCLE=03]. For instance, 01. Return the freshly created filter.",
                "operationId": "handleCreateEntityFilter",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.create.entity.filter"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.name",
                        "in": "formData",
                        "description": "The filter name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.entity.info.enum.key",
                        "in": "formData",
                        "description": "The key of the entity to filter",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Filter"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-filter-condition-field": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group",
                    "go / e / Filter Condition Field"
                ],
                "summary": "Add filter condition field",
                "description": "Create a new filter condition field within the conditon group having the given id. Return the newly created condition field",
                "operationId": "handleCreateConditionField",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.create.condition.field"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.name",
                        "in": "formData",
                        "description": "The condition name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The id of the group this condition belongs to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.condition",
                        "in": "formData",
                        "description": "The condition",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.member.type",
                        "in": "formData",
                        "description": "The member type, if any. (Java fully qualified class name)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.sql.template",
                        "in": "formData",
                        "description": "The SQL template representing this condition",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.type",
                        "in": "formData",
                        "description": "The field type. (Java fully qualified class name)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.value",
                        "in": "formData",
                        "description": "The field value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Condition Field"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-filter-condition-group": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Add filter condition group",
                "description": "Create a new condition group using one of the two operators: [AND, OR], case insensitive. Return the newly created condition group",
                "operationId": "handleCreateConditionGroup",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.create.condition.group"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.and.or.operator",
                        "in": "formData",
                        "description": "The condition operator: OR | AND. Case insensitive",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.is.root",
                        "in": "formData",
                        "description": "Is it a root condition group?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Condition Group"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-filter-customized-view": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Customized Filter View"
                ],
                "summary": "Add a filter customized view",
                "description": "Add a new customized view to the filter with the given id. Return the newly created customized view entity.",
                "operationId": "handleCreateCustomizedFilterView",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.create.cutomized.filter.view"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.customized.filter.view.name",
                        "in": "formData",
                        "description": "The customized view name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.customized.filter.view.field.type",
                        "in": "formData",
                        "description": "The customized view field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.customized.filter.view.sorting",
                        "in": "formData",
                        "description": "The customized view sorting type:[NONE,DESCENDING,ASCENDING]",
                        "required": false,
                        "type": "string",
                        "default": "NONE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customized Filter View"
                        }
                    }
                }
            }
        },
        "/filterservice/#add-filter-subcondition-group": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Add a new sub-condition group",
                "description": "Add the filter sub-condition group with the given id to the condition group having the given id. Return true if the operation succeeds.",
                "operationId": "handleAddSubCondition",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.add.sub.condition"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.sub.condition.group.id",
                        "in": "formData",
                        "description": "The sub-condition id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/filterservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/filterservice/#count-filter-items": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Count items in filter",
                "description": "Count the work items fullfilling the criteria of the filter having the given id.",
                "operationId": "handleGetItemCount",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.count.items.in.filter"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/filterservice/#count-private-filters": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "count all private filters",
                "description": "Return the count of all private filters.",
                "operationId": "handleCountPrivateFilters",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.count.private.filters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/filterservice/#count-private-filters-by-user": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "count a user private filters",
                "description": "Count the private filters of the user with the given id.",
                "operationId": "handleCountPrivateFiltersOfUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.count.private.filters.of.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/filterservice/#count-public-filters": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "count all public filters",
                "description": "Return the count of all public filters.",
                "operationId": "handleCountPublicFilters",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.count.public.filters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Delete extended field",
                "description": "Delete the exetnded field with the given id. Return true if successful.",
                "operationId": "handleDeleteFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-filter": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Delete filter",
                "description": "Delete the filter with the given id. Return true if deletion was successful.",
                "operationId": "handleDeleteEntityFilter",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.delete.condition.group"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-filter-condition-fields": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group",
                    "go / e / Filter Condition Field"
                ],
                "summary": "Delete filter condition fields",
                "description": "Remove the condition fields with the given id's from the condition group having the given id. Return true if the operation succeeds.",
                "operationId": "handleDeleteConditionField",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.delete.condition.field"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.field.list.ids",
                        "in": "formData",
                        "description": "Array of one or more condition fields's id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-filter-customized-view": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Customized Filter View"
                ],
                "summary": "Delete filter customized view",
                "description": "Remove the customized filter views with the given id's from the the filter having the given id. Return true if the operation succeeds.",
                "operationId": "handleDeleteCustomizedFilterView",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.delete.customized.filter.view"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.customized.filter.view.list.ids",
                        "in": "formData",
                        "description": "Array of customized filter views id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#delete-filter-subcondition-group": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Delete filter sub-condition group",
                "description": "Remove the filter sub-condition group with the given id from the condition group having the given id. Return true if the operation succeeds.",
                "operationId": "handleDeleteSubCondition",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.delete.sub.condition"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.sub.condition.group.id",
                        "in": "formData",
                        "description": "The sub-condition id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filterservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-extended-fields-by-name": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch extended fields by name",
                "description": "Fetch a list of extended fields having the given name.",
                "operationId": "handleFetchExtendedFieldsWithName",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.fields.extended.with.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The extended field type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filter-condition-fields": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Fetch filter condition fields",
                "description": "Fetch a list of fields belonging to the filter condition group with the given id.",
                "operationId": "handleFetchConditionGroupFields",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.condition.group.fields"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Condition Field"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filter-customized-views": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Customized Filter View"
                ],
                "summary": "Fetch customized filter views",
                "description": "Fetch a list of customized views of the filter having the given id.",
                "operationId": "handleFetchCustomizedFilterViews",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.customized.filter.views"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customized Filter View"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filter-items-ids": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch items' id's in filter",
                "description": "Fetch the id's of the items belonging to the filter with the givne id. Return a list of id's",
                "operationId": "handleGetItemsIdsInFilter",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.items.ids.in.filter"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "Filter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filter-root-condition-group": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Fetch root filter condition group",
                "description": "Fetch the root condition group of the filter with the given id.",
                "operationId": "handleFetchFilterRootConditionGroup",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.filter.root.condition.group"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.filter.id",
                        "in": "formData",
                        "description": "The filter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Condition Group"
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filter-subconditions": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter",
                    "go / e / Filter Condition Group"
                ],
                "summary": "Fetch group sub-conditions",
                "description": "Fetch a list of sub-conditions belonging to the group condition having the given id.",
                "operationId": "handleFetchSubConditions",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.sub.conditions"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.condition.group.id",
                        "in": "formData",
                        "description": "The condition group id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Condition Group"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-filters-with-ids": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch filters with given id's",
                "description": "Fetch a list of filters with the given one or more id's.",
                "operationId": "handleFetchFiltersWithIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.filters.with.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of filters's id's",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-own-and-public-filters": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch own and public filters",
                "description": "Fetch a list of public filters as well as those belonging to the user making this request. A count of items each filter contains is provided as well within the filter object itslef with the key: gravity.rest.filter.items.count",
                "operationId": "handleGetOwnAndPublicFilters",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.own.and.public.filters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-own-and-public-filters-no-count": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch own and public filters without counts",
                "description": "Fetch a list of public filters as well as those belonging to the user making this request. The count of items within each filter will not be provided.",
                "operationId": "handleGetOwnAndPublicFiltersWithoutCount",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.own.and.public.filters.uncounted"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-own-filters-ids": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch own filters",
                "description": "Fetch the list of id?s of filters belonging/private to the user with the given id.",
                "operationId": "handleGetOwnFiltersIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.own.filters.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-private-filters-by-user": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch a user private filters",
                "description": "Fetch a list of the private filters of the user with the given id.",
                "operationId": "handleFetchPrivateFiltersOfUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.private.filters.of.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-public-filters": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch all public filters",
                "description": "Fetch a list of all public filters.",
                "operationId": "handleFetchPublicFilters",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.public.filters"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/filterservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/filterservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/filterservice/fetch-public-filters-ids": {
            "post": {
                "tags": [
                    "go / s / FilterService",
                    "go / e / x / a / Filter"
                ],
                "summary": "Fetch public filters",
                "description": "Fetch the list of all public filters' id's.",
                "operationId": "handleGetPublicFiltersIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.filterservice.fetch.public.filters.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-comment": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Create a new comment",
                "description": "Create a new comment, add it to a work item then return the newly created comment.",
                "operationId": "handleAddComment",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.add.comment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.subject",
                        "in": "formData",
                        "description": "Comment's subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.description",
                        "in": "formData",
                        "description": "Comment's description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field",
                "description": "Add a new extended field to the extendable entity having the given id. Return the newly added extended field.<br>The type of the being added extended field: (Type provided with parameter<b> gravity.rest.field.extended.type</b>) may have one of the following values:<ul><li>secret: for a field that will hold encrypted values, e.g.; passwords.<li>string: for a field that will hold string values.<li>number: for a field that will hold numeric values.<li>boolean: for a field that will hold booleans.<li>bytearray: for a field that will hold byte-array values.<li>date: for a field that will hold dates.<li>entity: for a field that will hold entities as values. Here you'll also need to provide one more info:<ul><li>gravity.rest.entity.class.name: a Java full-package name of the interface (an IPersistable sub-type) of acceptable entities type. e.g., com.remainsoftware.gravity.model.authority.IUser for a field that has users as values.</li></ul></li><li>entitytype: for a field that will hold entity types as values. Here you'll need to provide one more info:<ul><li>gravity.rest.entitytype.id: the id of the entityType this field can hold.</li></ul></li></ul>",
                "operationId": "handleAddFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.extendable.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The field name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.class.name",
                        "in": "formData",
                        "description": "The field class name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "The entity type id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.label",
                        "in": "formData",
                        "description": "The field label",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.weight",
                        "in": "formData",
                        "description": "The field weight",
                        "required": false,
                        "type": "Integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-extended-field-by-id": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field by id",
                "description": "Add the (already existing) extended field with the given id to the work item having the given id. Return true if successful.",
                "operationId": "handleAddFieldExtendedById",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended.by.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extendable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-extended-field-value": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field value",
                "description": "Add a value to the exetnded field with the given id. Return the newly created and added field value.<br>The value should comply with the type of the extended field it is being added to. e.g., a number extended field expects a numeric value, a boolean field a boolean value and so on. Of course, for an extended field that expects an entity as value, the id of the entity (that will be put as value) itself should be provided.",
                "operationId": "handleAddFieldExtendedValue",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.field.extended.add.value"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.value.value",
                        "in": "formData",
                        "description": "The value",
                        "required": true,
                        "type": "Object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-item": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Add new work item",
                "description": "Create a new work item. Return the newly created work item.",
                "operationId": "handleCreateItem",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.workitem"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.generate.title",
                        "in": "formData",
                        "description": "Automatically generate items' title?",
                        "required": true,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "gravity.rest.applicationWorkflowEntitytype.id",
                        "in": "formData",
                        "description": "The id of an ApplicationLifeCycleItemType entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.title",
                        "in": "formData",
                        "description": "Item title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.subject",
                        "in": "formData",
                        "description": "Item subject",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.description",
                        "in": "formData",
                        "description": "Item description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.status",
                        "in": "formData",
                        "description": "Item status. Numeric value: Unconfirmed=1, New=2, Assigned=3, Reopened=4, Resolved=5, Verified=6, Closed=7",
                        "required": false,
                        "type": "integer",
                        "default": 2
                    },
                    {
                        "name": "gravity.rest.item.severity",
                        "in": "formData",
                        "description": "Item severity. Numeric value: BLOCKER=1, CRITICAL=2, MAJOR=3, NORMAL=4, MINOR=5, TRIVIAL=6, ENHANCEMENT=7",
                        "required": false,
                        "type": "integer",
                        "default": 4
                    },
                    {
                        "name": "gravity.rest.item.priority",
                        "in": "formData",
                        "description": "Item priority. Numeric value: VERY_HIGH=1, HIGH=2, NORMAL=3, LOW=4, VERY_LOW=5",
                        "required": false,
                        "type": "integer",
                        "default": 3
                    },
                    {
                        "name": "gravity.rest.item.assignee.id",
                        "in": "formData",
                        "description": "The assignee id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.completiondate",
                        "in": "formData",
                        "description": "Work item expected completion date. A long value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.enddate",
                        "in": "formData",
                        "description": "Work item expected end date. A long value subject",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.startdate",
                        "in": "formData",
                        "description": "Work item expected start date. A long value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.hours",
                        "in": "formData",
                        "description": "Work item expected hours. An integer value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.realized.completiondate",
                        "in": "formData",
                        "description": "Work item realized completion date. A long value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.realized.enddate",
                        "in": "formData",
                        "description": "Work item realized end date. A long value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.realized.startdate",
                        "in": "formData",
                        "description": "Work item realized start date. A long value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.realized.hours",
                        "in": "formData",
                        "description": "Work item realized hours. An intger value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.stage.id",
                        "in": "formData",
                        "description": "Work item stage id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.status.stage.id",
                        "in": "formData",
                        "description": "Work item status stage id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#add-reply-comment": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Create a new reply comment",
                "description": "Create a new sub-comment (reply comment), add it to its parent comment then return the newly created comment.",
                "operationId": "handleAddSubComment",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.add.subcomment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "Comment's parent id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.subject",
                        "in": "formData",
                        "description": "Comment's subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.description",
                        "in": "formData",
                        "description": "Comment's description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/itemservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#can-follow-item": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Can follow work item",
                "description": "Check whether the user with the given id can follow the work item with the given id. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanFollowItem",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.follow.item"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#can-unfollow-item": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Can unfollow work item",
                "description": "Check whether the user with the given id can unfollow the work item with the given id. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanUnfollowItem",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.unfollow.item"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#check-item-capabilities": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / Capability",
                    "go / e / x / a / Work Item",
                    "go / e / x / Authorizable"
                ],
                "summary": "Check work item capabilities",
                "description": "Given a (concrete) work item and a list of capabilities' names. Check whether the user with the given id has those capabilities on that item.  If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template item, then the item id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.item.capability.create</b><li><b>gravity.rest.item.capability.read</b><li><b>gravity.rest.item.capability.update</b><li><b>gravity.rest.item.capability.delete</b><li><b>gravity.rest.item.capability.add.role</b><li><b>gravity.rest.item.capability.change.name</b><li><b>gravity.rest.item.capability.take</b>: Assign an item to yourself if it is currently assigned to a group (unassigned).<li><b>gravity.rest.item.capability.release</b>: Assign the item you are assigned to one of the groups you belong to.<li><b>gravity.rest.item.capability.steal</b>: Assign an item to yourself even if it is now assigned to someone else.<li><b>gravity.rest.item.capability.assign</b><li><b>gravity.rest.item.capability.change.application</b><li><b>gravity.rest.item.capability.change.lifecycle</b><li><b>gravity.rest.item.capability.change.description</b><li><b>gravity.rest.item.capability.update.comment</b><li><b>gravity.rest.item.capability.update.own.comment</b><li><b>gravity.rest.item.capability.add.comment</b><li><b>gravity.rest.item.capability.delete.comment</b><li><b>gravity.rest.item.capability.read.comment</b><li><b>gravity.rest.item.capability.change.dates</b><li><b>gravity.rest.item.capability.change.reporter</b><li><b>gravity.rest.item.capability.change.priority</b><li><b>gravity.rest.item.capability.change.severity</b><li><b>gravity.rest.item.capability.change.status</b><li><b>gravity.rest.item.capability.change.subject</b></ul><br>Example of an array of capabilities to check: [gravity.rest.item.capability.change.name , gravity.rest.item.capability.change.reporter]",
                "operationId": "handleFetchItemCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.item.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.items.capabilities.array",
                        "in": "formData",
                        "description": "Array of capabilities to check",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JSONObject"
                        }
                    }
                }
            }
        },
        "/itemservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/itemservice/#count-assignee-items": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / User"
                ],
                "summary": "Count assignee work items",
                "description": "Count the work items assigned to the user with the given id. Return the count as a long value.",
                "operationId": "handleCountItemsAssignedToUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.count.items.reported.by.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.assignee.id",
                        "in": "formData",
                        "description": "Assignee id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/itemservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/itemservice/#count-reporter-items": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Count reporter work items",
                "description": "Count the work items reported by the user with the given id. Return the count as a long value.",
                "operationId": "handleCountItemsReportedByUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.count.items.reported.by.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.reporter.id",
                        "in": "formData",
                        "description": "Reporter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/itemservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/itemservice/#delete-comment": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Delete comment with the given id",
                "description": "Delete the comment with the given id. Returns true if successful, false otherwise. The caller must have the authority to perform this action.",
                "operationId": "handleDeleteComment",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.comment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "The comment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#delete-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Delete extended field",
                "description": "Delete the exetnded field with the given id. Return true if successful.",
                "operationId": "handleDeleteFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/itemservice/#delete-item": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Delete the work item with the given id",
                "description": "Delete the work item with the given id. If successful, true is returned, otherwise false. The caller must be authorized to perform this action.",
                "operationId": "handleDeleteItem",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.workitem"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/itemservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-app-workflow-itemtypes": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item Type"
                ],
                "summary": "Fetch the list of all [ApplicationLifeCycleItemType] entities",
                "description": "Fetch a list of all [ApplicationLifeCycleItemType] entities. Note: Each of those entities will be checked against [read] capability of both its application and workflow",
                "operationId": "handleFetchcAppLifeCycleItemTypes",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.applicationLifeCycleItemTypes"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application-Workflow-ItemType"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-assignee-items-ids": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch assignee items' id's",
                "description": "Fetch the list of id's of the work item(s) assigned to the user with the given id.",
                "operationId": "handleFetchItemsIdsAssignedToUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.fetch.items.ids.assigned.to.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.assignee.id",
                        "in": "formData",
                        "description": "Assignee id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-commenters-ids": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / User",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch commenters id's",
                "description": "Fetch the list of id's of users commenting on the work item with the given id.",
                "operationId": "handleFetchItemCommentersIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.item.commenters.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-comments": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch comments with the given id's",
                "description": "Fetch the list of comments given a non-empty list of valid comments' id's.",
                "operationId": "handleFetchCommentsWithIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.comments.with.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of comments' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comment"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-comments-ids": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch comments id's",
                "description": "Fetch a list of all id's of comments belonging to a given work item.",
                "operationId": "handleFetchCommentsIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.comments.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-discussion": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Discussion",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch discussion",
                "description": "Given a discussion entity id or work item id, fetch the discussion having that id or belonging to the item with that id. By default, comments entities are not included in the response.",
                "operationId": "handleFetchDiscussion",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.discussion"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.discussion.id",
                        "in": "formData",
                        "description": "Discussion id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.discussion.include.comments",
                        "in": "formData",
                        "description": "Include comments?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Discussion"
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-discussion-comments": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment",
                    "go / e / x / a / Discussion"
                ],
                "summary": "Fetch discussion comments",
                "description": "Fetch all the comments that belong to the discussion or work item with the provided id.",
                "operationId": "handleFetchDiscussionComments",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.discussion.fetch.comment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.discussion.id",
                        "in": "formData",
                        "description": "Discussion id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comment"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-entity-types": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Entity Type"
                ],
                "summary": "Fetch all entity types",
                "description": "Fetch all entity types.",
                "operationId": "handleFetchEntityTypes",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.entity.types"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Include icon?",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Entity Type"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-extended-fields-by-name": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch extended fields by name",
                "description": "Fetch a list of extended fields having the given name.",
                "operationId": "handleFetchExtendedFieldsWithName",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.fields.extended.with.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The extended field type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-item-contributors": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch work item contributors",
                "description": "Fetch the users set as contributors to the work item with the given id.",
                "operationId": "handleFetchItemContributors",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.contributors"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-item-description": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch work item description",
                "description": "Fetch the description of the work item with the given id.",
                "operationId": "handleFetchItemDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-item-html-description": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch work item HTML description",
                "description": "Fetch the HTML formatted description of the work item with the given id.",
                "operationId": "handleFetchItemHtmlDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.html.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-items": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch work items by id's",
                "description": "Given a JSon array of one or more valid work items id's, a successful call will return a JSon array of work items",
                "operationId": "handleFetchItemsWithIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.items.with.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.items.ids.array",
                        "in": "formData",
                        "description": "Array of work item's id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-items-by-title": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch all items having the given title",
                "description": "",
                "operationId": "handleFetchItemsByName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.items.by.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.title",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-parent-comment": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch parent comment",
                "description": "Fetch the parent comment of the comment with the given id.",
                "operationId": "handleFetchParentComment",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.parent.comment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "Parent comment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-reply-comments": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Fetch reply comments",
                "description": "Fetch replies to the comment with the given id.",
                "operationId": "handleFetchSubComments",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.sub.commnets"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "Comment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comment"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-reporter-items-ids": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch reporter items' id's",
                "description": "Fetch the list of id's of the work item(s) reported by the user with the given id.",
                "operationId": "handleFetchItemsIdsReportedByUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.fetch.items.ids.reported.by.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.reporter.id",
                        "in": "formData",
                        "description": "Reporter id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-template-extended-fields": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch all template extended fields",
                "description": "Fetch all template extended fields.",
                "operationId": "handleFetchTempateFieldsExtended",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.template.fields.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#fetch-transfer-paths": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Stage"
                ],
                "summary": "Fetch work item transfer paths",
                "description": "Given a work item and starting from its current stage, fetch a list of all possible transfer paths this item may go through.",
                "operationId": "handleGetTransferPahts",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.workitem.transfer.paths"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transfer Path"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#filter-connectable-items": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch connectable work items",
                "description": "Given a work item and a list of items id's. Filter out items fulfilling these conditions:<ul><li>The filtered item can be the source or target of the given item based on a definitions dependency.<li>The filtered item is not yet connected with the given item.<li>The id of the filtered item belongs to the given list of candidate items id's. If the latter is null or empty, then this condition is ignored.<li>if field [gravity.rest.boolean] is true, then whether the caller is authorized to connect the filtered item with the given one is also checked. This is, unauthorized connections will be filtered out too.</ul>",
                "operationId": "handleFilterConnectableItems",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.filter.connectable.items"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of id's of candidate items",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "gravity.rest.boolean",
                        "in": "formData",
                        "description": "Check connection authorization?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/itemservice/#transfer-work-item": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / Workflow",
                    "go / e / x / a / Stage"
                ],
                "summary": "Transfer a work item",
                "description": "Transfer the work item with the given id to the next stage through the path with the given id. Return the freshly updated work item.",
                "operationId": "handleTransferItem",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.transfer.item"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.transfer.path.id",
                        "in": "formData",
                        "description": "The transfer path id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-comment-description": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Update comment description",
                "description": "Update the description of the comment with the given id. A freshly updated comment will be returned.",
                "operationId": "handleSetCommentDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.comment.set.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "Comment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.description",
                        "in": "formData",
                        "description": "Comment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-comment-subject": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / Comment"
                ],
                "summary": "Update comment subject",
                "description": "Update the subject of the comment with the given id. A freshly updated comment will be returned.",
                "operationId": "handleSetCommentSubject",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.comment.set.subject"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.id",
                        "in": "formData",
                        "description": "Comment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.comment.subject",
                        "in": "formData",
                        "description": "Comment subject",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-exptected-completion-date": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item expected completion date",
                "description": "Set the expected completion date of the work item with the given id to the given value. The provided value must be the numeric [Long] representation in milliseconds. A freshly updated work item will be returned.",
                "operationId": "handleSetExpectedCompletionDate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.expected.completion.date"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.completiondate",
                        "in": "formData",
                        "description": "Expected completion date (long value)",
                        "required": true,
                        "type": "long"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-exptected-start-date": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item expected start date",
                "description": "Set the expected start date of the work item with the given id to the given value. The provided value must be the numeric [Long] representation in milliseconds. A freshly updated work item will be returned.",
                "operationId": "handleSetExpectedStartDate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.expected.start.date"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.expected.startdate",
                        "in": "formData",
                        "description": "Expected start date (long value)",
                        "required": true,
                        "type": "long"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-assignee": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / User"
                ],
                "summary": "Update work item assignee",
                "description": "Assign the work item with the given id to the user with the given id. A freshly updated work item will be returned.",
                "operationId": "handleSetItemAssignee",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.discussion.fetch.comment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.assignee.id",
                        "in": "formData",
                        "description": "Assignee (user) id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-description": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item description",
                "description": "Update the description of the work item with the given id. A freshly updated work item will be returned.",
                "operationId": "handleSetItemDescription",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.description",
                        "in": "formData",
                        "description": "Work item description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-priority": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item priority",
                "description": "Update the priority of the given work item with the given status integer value. Priority options:[VERY_HIGH=1, HIGH=2, NORMAL=3, LOW=4, VERY_LOW=5]. A freshly updated work item will be returned.",
                "operationId": "handleSetItemPriority",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.priority"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.priority",
                        "in": "formData",
                        "description": "Priority (int) value",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-reporter": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item",
                    "go / e / x / a / User"
                ],
                "summary": "Update work item reprter",
                "description": "Set the reporter of the work item with the given id to the user with the given id. A freshly updated work item will be returned.",
                "operationId": "handleSetItemReporter",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.reporter"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.reporter.id",
                        "in": "formData",
                        "description": "Reporter (user) id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-severity": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item severity",
                "description": "Update the severity of the given work item with the given severity integer value. Severity options:[BLOCKER=1, CRITICAL=2, MAJOR=3, NORMAL=4, MINOR=5, TRIVIAL=6, ENHANCEMENT=7]. A freshly updated work item will be returned.",
                "operationId": "handleSetItemSeverity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.severity"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.severity",
                        "in": "formData",
                        "description": "Severity (int) value",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-status": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item status",
                "description": "Update the status of the given work item with the given status integer value. Status options:[Unconfirmed=1, New=2, Assigned=3, Reopened=4, Resolved=5, Verified=6, Closed=7]. A freshly updated work item will be returned.",
                "operationId": "handleSetItemStatus",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.status"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.status",
                        "in": "formData",
                        "description": "Status (int) value",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-subject": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item subject",
                "description": "Update the subject of the work item with the given id. A freshly updated work item will be returned.",
                "operationId": "handleSetItemSubject",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.subject"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.subject",
                        "in": "formData",
                        "description": "Work item title",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#update-item-title": {
            "post": {
                "tags": [
                    "go / s / ItemService",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Update work item title",
                "description": "Update the title of the work item with the given id. A freshly updated work item will be returned.",
                "operationId": "handleSetItemName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.item.set.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.id",
                        "in": "formData",
                        "description": "Work item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.item.title",
                        "in": "formData",
                        "description": "Work item title",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Work Item"
                        }
                    }
                }
            }
        },
        "/itemservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/loginservice/#login": {
            "post": {
                "tags": [
                    "go / s / LoginService",
                    "go / e / x / a / User"
                ],
                "summary": "Login a user",
                "description": "Login to Gravity using either a username and password or an API access token. Return the user session and context id's. The just logged-in user data is returned as well if the username and password were used (instead an access token) to login.<br>Please note that you'll need to use these returned user session and context id's for logout requests.",
                "operationId": "handleLogin",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.loginservice.login"
                    },
                    {
                        "name": "gravity.rest.role.name",
                        "in": "formData",
                        "description": "Username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.password",
                        "in": "formData",
                        "description": "Password",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/loginservice/#logout": {
            "post": {
                "tags": [
                    "go / s / LoginService",
                    "go / e / x / a / User"
                ],
                "summary": "Logout a user",
                "description": "Logout a user from Gravity using  the user session and context id's (previously gotten from a login response).",
                "operationId": "handleLogout",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.loginservice.login"
                    },
                    {
                        "name": "gravity.rest.login.user.context.id",
                        "in": "formData",
                        "description": "The user context id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.session.id",
                        "in": "formData",
                        "description": "The user session id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/taggingservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/taggingservice/#add-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field",
                "description": "Add a new extended field to the extendable entity having the given id. Return the newly added extended field.<br>The type of the being added extended field: (Type provided with parameter<b> gravity.rest.field.extended.type</b>) may have one of the following values:<ul><li>secret: for a field that will hold encrypted values, e.g.; passwords.<li>string: for a field that will hold string values.<li>number: for a field that will hold numeric values.<li>boolean: for a field that will hold booleans.<li>bytearray: for a field that will hold byte-array values.<li>date: for a field that will hold dates.<li>entity: for a field that will hold entities as values. Here you'll also need to provide one more info:<ul><li>gravity.rest.entity.class.name: a Java full-package name of the interface (an IPersistable sub-type) of acceptable entities type. e.g., com.remainsoftware.gravity.model.authority.IUser for a field that has users as values.</li></ul></li><li>entitytype: for a field that will hold entity types as values. Here you'll need to provide one more info:<ul><li>gravity.rest.entitytype.id: the id of the entityType this field can hold.</li></ul></li></ul>",
                "operationId": "handleAddFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.extendable.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The field name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.class.name",
                        "in": "formData",
                        "description": "The field class name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "The entity type id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.label",
                        "in": "formData",
                        "description": "The field label",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.weight",
                        "in": "formData",
                        "description": "The field weight",
                        "required": false,
                        "type": "Integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field"
                        }
                    }
                }
            }
        },
        "/taggingservice/#add-extended-field-by-id": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field by id",
                "description": "Add the (already existing) extended field with the given id to the work item having the given id. Return true if successful.",
                "operationId": "handleAddFieldExtendedById",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended.by.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extendable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#add-extended-field-value": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field value",
                "description": "Add a value to the exetnded field with the given id. Return the newly created and added field value.<br>The value should comply with the type of the extended field it is being added to. e.g., a number extended field expects a numeric value, a boolean field a boolean value and so on. Of course, for an extended field that expects an entity as value, the id of the entity (that will be put as value) itself should be provided.",
                "operationId": "handleAddFieldExtendedValue",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.field.extended.add.value"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.value.value",
                        "in": "formData",
                        "description": "The value",
                        "required": true,
                        "type": "Object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/taggingservice/#add-tag": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Add new tag",
                "description": "Create a new tag. Return the newly created tag entity.",
                "operationId": "handleCreateTag",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.create.tag"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.creator.id",
                        "in": "formData",
                        "description": "The tag creator id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.name",
                        "in": "formData",
                        "description": "The tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.parent.name",
                        "in": "formData",
                        "description": "The parent tag name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.description",
                        "in": "formData",
                        "description": "The tag description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                }
            }
        },
        "/taggingservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/taggingservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/taggingservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/taggingservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#delete-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Delete extended field",
                "description": "Delete the exetnded field with the given id. Return true if successful.",
                "operationId": "handleDeleteFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/taggingservice/#delete-tag": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Delete tag",
                "description": "Delete the tag having the given id. Return the deleted tag entity.",
                "operationId": "handleDeleteTag",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.delete.tag"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.id",
                        "in": "formData",
                        "description": "The tag id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                }
            }
        },
        "/taggingservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-displayable-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch displayable tags",
                "description": "Fetch a list of displayable tags. The ones that do have a display name which is a pretty-printed tag name besides its parent name. E.g. A display name is: 'priority:high', the tag name is 'high' and its parent name is 'status'.// The token  used to concat the tag and its parent names is available in the returned tag entity using the key: gravity.rest.tag.concat.token",
                "operationId": "handleGetDisplayableTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.displayable.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-entity-system-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch entity  system tags",
                "description": "Fetch a list of system tags of the entity with the given id. ",
                "operationId": "handleGetEntitySystemTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.entity.system.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-entity-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch entity tags",
                "description": "Fetch a list of all tags (system-generated/user-based) of the entity with the given id. ",
                "operationId": "handleGetEntityTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.entity.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-entity-user-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch user-created tags",
                "description": "Fetch a list of user-created tags of the entity with the given id. ",
                "operationId": "handleGetEntityUserTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.entity.user.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-extended-fields-by-name": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch extended fields by name",
                "description": "Fetch a list of extended fields having the given name.",
                "operationId": "handleFetchExtendedFieldsWithName",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.fields.extended.with.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The extended field type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-items-with-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag",
                    "go / e / x / a / Work Item"
                ],
                "summary": "Fetch items with tags",
                "description": "Fetch a list of work items having tags with the given id's.",
                "operationId": "handleGetItemsIdsWithTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.items.ids.with.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of tags' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Work Item"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-parent-tag": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch parent tag",
                "description": "Fetch the parent/root of the the tag with the given id.",
                "operationId": "handleFetchParentTag",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.tag.parent"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.id",
                        "in": "formData",
                        "description": "The tag id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-tag-capabilities": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Fetch tag capabilities",
                "description": "Fetch capabilities the user having the given id has over the tag with the given id. If no user is provided, then the implicit user is the caller itself (the access token user).<br>Return a JSonObject containing granted capabilities (if any) with keys being some of the following:<ul><li><b>gravity.rest.tag.capability.create</b>: You can create a new tag.<li><b>gravity.rest.tag.capability.tag</b>: You can add a tag to an entity.<li><b>gravity.rest.tag.capability.untag</b>: You can remove a tag from an entity.<li><b>gravity.rest.tag.capability.undo.tag</b>: You can untag an entity you previously tagged.<li><b>gravity.rest.tag.capability.update</b>: You can edit a tag.<li><b>gravity.rest.tag.capability.update.own.tag</b>: You can only update tags you created.<li><b>gravity.rest.tag.capability.delete</b>: You can delete any (non-system) tag.<li><b>gravity.rest.tag.capability.delete.own.tag</b>: You can delete your own tags only.<li><b>gravity.rest.tag.capability.read</b>: You can read any tag.<li><b>gravity.rest.tag.capability.read.own.tag</b>: You can only read your own tags.<li><b>gravity.rest.tag.capability.add.role</b>: You can connect a role with a tag.</ul>",
                "operationId": "handleFetchtTagCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.tag.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.id",
                        "in": "formData",
                        "description": "The tag id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JSONObject"
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-tag-template-capabilities": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Fetch tag template capabilities",
                "description": "Fetch a list of tag template capabilities the user with the given id has. If no user is provided, then the implicit user is the caller itself (the access token user).<br>Return a JSonObject containing granted capabilities (if any) with keys being some of the following:<ul><li><b>gravity.rest.tag.capability.create</b>: You can create a new tag.<li><b>gravity.rest.tag.capability.tag</b>: You can add a tag to an entity.<li><b>gravity.rest.tag.capability.untag</b>: You can remove a tag from an entity.<li><b>gravity.rest.tag.capability.undo.tag</b>: You can untag an entity you previously tagged.<li><b>gravity.rest.tag.capability.update</b>: You can edit a tag.<li><b>gravity.rest.tag.capability.update.own.tag</b>: You can only update tags you created.<li><b>gravity.rest.tag.capability.delete</b>: You can delete any (non-system) tag.<li><b>gravity.rest.tag.capability.delete.own.tag</b>: You can delete your own tags only.<li><b>gravity.rest.tag.capability.read</b>: You can read any tag.<li><b>gravity.rest.tag.capability.read.own.tag</b>: You can only read your own tags.<li><b>gravity.rest.tag.capability.add.role</b>: You can connect a role with a tag.</ul>",
                "operationId": "handleFetchtTagTemplateCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.tag.template.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JSONObject"
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-tags": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Fetch tags",
                "description": "Fetch a list of all tags",
                "operationId": "handleGetTags",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.fetch.tags"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/taggingservice/#tag-entity": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Tag an entity",
                "description": "Tag the entity having the given id with the tags having the given id's. Return true if the operation was successful.",
                "operationId": "handleApplyTagsToEntity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.apply.tags.to.entity"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of tags' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#untag-entity": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Untag an entity",
                "description": "Remove the tags having the given id's from the entity having the given id. Return true if the operation was successful.",
                "operationId": "handleRemoveTagsFromEntity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.remove.tags.from.entity"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of tags' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/taggingservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/taggingservice/#update-tag": {
            "post": {
                "tags": [
                    "go / s / TaggingService",
                    "go / e / x / a / Tag"
                ],
                "summary": "Update tag",
                "description": "Update the tag having the given id. Return the freshly updated tag entity.",
                "operationId": "handleUpdateTag",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.taggingservice.update.tag"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.id",
                        "in": "formData",
                        "description": "The tag id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.name",
                        "in": "formData",
                        "description": "The tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.parent.name",
                        "in": "formData",
                        "description": "The parent tag name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.tag.description",
                        "in": "formData",
                        "description": "The tag description",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                }
            }
        },
        "/taggingservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-access-token": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Create new access token",
                "description": "Add a new API access token for the user with the given id. The given user is the owner/creator of the access token being created. If no name is provided for this new access token, a random name is generated. Return the newly created access token entity.",
                "operationId": "handleGenerateAccessTokenByUserId",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.generate.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.name",
                        "in": "formData",
                        "description": "Access token name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.description",
                        "in": "formData",
                        "description": "Access token description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.from.date",
                        "in": "formData",
                        "description": "Valid from date. Numeric (long) value. Defaults to the date of token creation",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.to.date",
                        "in": "formData",
                        "description": "Valid to date. Numeric (long) representation",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.access.token.is.disabled",
                        "in": "formData",
                        "description": "Is access token disabled?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.access.token.is.inherit.all.authority",
                        "in": "formData",
                        "description": "Is the access token inheriting all authority from its owner?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-access-token-by-username": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Create new access token by username",
                "description": "Create a new API access token for the user with the given username. The given user is the owner/creator of the access token being created. If no name is provided for this new access token, a random name is generated. Return the newly created access token entity.",
                "operationId": "handleGenerateAccessTokenByUserName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.generate.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.role.name",
                        "in": "formData",
                        "description": "User name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.name",
                        "in": "formData",
                        "description": "Access token name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.description",
                        "in": "formData",
                        "description": "Access token description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.from.date",
                        "in": "formData",
                        "description": "Valid from date. Numeric (long) value. Defaults to the date of token creation",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.to.date",
                        "in": "formData",
                        "description": "Valid to date. Numeric (long) representation",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.access.token.is.disabled",
                        "in": "formData",
                        "description": "Is access token disabled?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.access.token.is.inherit.all.authority",
                        "in": "formData",
                        "description": "Is the access token inheriting all authority from its owner?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Add attachment",
                "description": "Add the attachment with the given id to the entity having the given id. Return true if successful.",
                "operationId": "handleAddAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-capabilities-to-access-token": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Add capabilities to access token",
                "description": "Given a list/array of capabilities id's, add these capabilities to the access token having the given id. Or set the access token to automatically inherit all the current and future capabilities from the token holder/owner. Return the freshly updated access token entity.",
                "operationId": "handleAddCapabilitiesToAccessToken",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.add.capabilities.to.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.id",
                        "in": "formData",
                        "description": "Access token id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "List of capabiilites  id's",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "gravity.rest.access.token.is.inherit.all.authority",
                        "in": "formData",
                        "description": "Is the access token inheriting all authority from its owner?",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Add dependency",
                "description": "Create a new dependency between the given source and target entities and with the given type. Return the newly create dependency.",
                "operationId": "handleCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the source of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "The id of the entity being the target of the dependency",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dependency"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field",
                "description": "Add a new extended field to the extendable entity having the given id. Return the newly added extended field.<br>The type of the being added extended field: (Type provided with parameter<b> gravity.rest.field.extended.type</b>) may have one of the following values:<ul><li>secret: for a field that will hold encrypted values, e.g.; passwords.<li>string: for a field that will hold string values.<li>number: for a field that will hold numeric values.<li>boolean: for a field that will hold booleans.<li>bytearray: for a field that will hold byte-array values.<li>date: for a field that will hold dates.<li>entity: for a field that will hold entities as values. Here you'll also need to provide one more info:<ul><li>gravity.rest.entity.class.name: a Java full-package name of the interface (an IPersistable sub-type) of acceptable entities type. e.g., com.remainsoftware.gravity.model.authority.IUser for a field that has users as values.</li></ul></li><li>entitytype: for a field that will hold entity types as values. Here you'll need to provide one more info:<ul><li>gravity.rest.entitytype.id: the id of the entityType this field can hold.</li></ul></li></ul>",
                "operationId": "handleAddFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.extendable.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The field name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The field type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.class.name",
                        "in": "formData",
                        "description": "The field class name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entitytype.id",
                        "in": "formData",
                        "description": "The entity type id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.label",
                        "in": "formData",
                        "description": "The field label",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.weight",
                        "in": "formData",
                        "description": "The field weight",
                        "required": false,
                        "type": "Integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-extended-field-by-id": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field by id",
                "description": "Add the (already existing) extended field with the given id to the work item having the given id. Return true if successful.",
                "operationId": "handleAddFieldExtendedById",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.add.field.extended.by.id"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extendable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#add-extended-field-value": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Add extended field value",
                "description": "Add a value to the exetnded field with the given id. Return the newly created and added field value.<br>The value should comply with the type of the extended field it is being added to. e.g., a number extended field expects a numeric value, a boolean field a boolean value and so on. Of course, for an extended field that expects an entity as value, the id of the entity (that will be put as value) itself should be provided.",
                "operationId": "handleAddFieldExtendedValue",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.field.extended.add.value"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The id of the dependency type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.value.value",
                        "in": "formData",
                        "description": "The value",
                        "required": true,
                        "type": "Object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/useradminservice/#can-create-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Can create dependency",
                "description": "Check whether the user with the given id can create a dependency between two given entities: one being the source and the other being the target of this dependency. If no user is provided, then the implicit user is the caller itself (the access token user). Return a boolean value: true=can, false=cannot.",
                "operationId": "handleCanCreateDependency",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.can.create.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.source.persistable.id",
                        "in": "formData",
                        "description": "Source entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.target.persistable.id",
                        "in": "formData",
                        "description": "Target entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependencytype.id",
                        "in": "formData",
                        "description": "Dependency type id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.isreverse",
                        "in": "formData",
                        "description": "Is it a reverse dependency?",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#can-follow-user": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / Dependency",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Can follow a user",
                "description": "Check wheher a user can follow another one / create dependency between two users. Return true==can, false==cannot.",
                "operationId": "handleIsFollowUserAuthorized",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.is.follow.user.authorized"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.follower.id",
                        "in": "formData",
                        "description": "The follower (user) id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.following.id",
                        "in": "formData",
                        "description": "The id of the user being followed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#can-unfollow-user": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / Dependency",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Can unfollow a user",
                "description": "Check wheher a user can unfollow another one / delete dependency between two users. Return true==can, false==cannot.",
                "operationId": "handleIsUnfollowUserAuthorized",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.is.unfollow.user.authorized"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.follower.id",
                        "in": "formData",
                        "description": "The follower (user) id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.following.id",
                        "in": "formData",
                        "description": "The id of the user being followed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#check-access-token-capabilities": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token",
                    "go / e / Capability",
                    "go / e / x / Authorizable",
                    "go / e / API Access Token Context"
                ],
                "summary": "Check access token capabilities",
                "description": "Given a list of names of access token capabilities, check whether the access token with the given id has those capabilities. If no access token id is provided, then the given capabilities are checked against the template access token. Return a JSONObject containing the given capabilities names as keys and the check results as values.<br>The following are capabilities names:<ul><li><b>gravity.rest.access.token.capability.create.own:</b> This capability enables you to create access tokens for yourself only<li><b>gravity.rest.access.token.capability.create.all:</b> This capability enables you to create access tokens for any user<li><b>gravity.rest.access.token.capability.read.own:</b> This capability enables you to read your access tokens only<li><b>gravity.rest.access.token.capability.read.all:</b> This capability enables you to read any access token<li><b>gravity.rest.access.token.capability.update.own:</b> This capability enables you to update your access tokens only<li><b>gravity.rest.access.token.capability.update.all:</b> This capability enables you to update any access token<li><b>gravity.rest.access.token.capability.delete.own:</b> This capability enables you to delete your access tokens only<li><b>gravity.rest.access.token.capability.delete.all:</b> This capability enables you to delete any access token<li><b>gravity.rest.access.token.capability.expand.authority.own:</b> This capability enables an access token to take more capabilities from its owner/creator<li><b>gravity.rest.access.token.capability.expand.authority.all:</b> This capability enables an access token to add more capabilities to any access token from its respective owner/creator<li><b>gravity.rest.access.token.capability.narrow.authority.own:</b> This capability enables an access to remove capabilities from itself only<li><b>gravity.rest.access.token.capability.narrow.authority.all:</b> This capability enables an access token to remove capabilities from any other token</ul><br><br>Example: [gravity.rest.access.token.capability.update.own , gravity.rest.access.token.capability.expand.authority.all]",
                "operationId": "handleFetchAccessTokenCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.access.token.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.id",
                        "in": "formData",
                        "description": "Access token id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.capabilities.list",
                        "in": "formData",
                        "description": "Array/List of names of capabilities",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#check-dependency-capabilities": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependency capabilities",
                "description": "Given a dependency and a list of capabilities' names. Check whether the user with the given id has those capabilities on that dependency. If no user is provided, then the implicit user is the caller itself (the access token user). To check those capabilities against a template dependency, then the dependency id is no more required, otherwise, it is.<br>The response is a JSONObject where the keys are the capabilities' names and values are booleans representing check results.<br>The following item capabilities are available:<ul><li><b>gravity.rest.dependency.capability.create</b><li><b>gravity.rest.dependency.capability.read</b><li><b>gravity.rest.dependency.capability.delete</b><li><b>gravity.rest.dependency.capability.update</b>\t</ul><br>Example of an array of capabilities to check: [gravity.rest.dependency.capability.create , gravity.rest.dependency.capability.update]",
                "operationId": "handleFetchDependencyCapabilities",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.fetch.dependency.capabilities"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "Dependency id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.istemplate",
                        "in": "formData",
                        "description": "Is it a template dependency?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "User id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.capabilities.array",
                        "in": "formData",
                        "description": "List of dependencies",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#convert-markup-to-html": {
            "post": {
                "tags": [
                    "go / e / x / a / Work Item",
                    "go / e / x / Comment",
                    "go / e / x / a / Tag"
                ],
                "summary": "Convert markup text to HTML",
                "description": "Convert the given input with the given markup typ to HTML. The markup type to convert from is an integer:[MARKDOWN=1, MEDIAWIKI=2]",
                "operationId": "handleConvertMarkupTextToHtml",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.convert.markup.text.tohtml"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Marktup text",
                        "in": "formData",
                        "description": "gravity.rest.entity.markup.text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Markup type",
                        "in": "formData",
                        "description": "gravity.rest.entity.content.type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/useradminservice/#count-dependencies-with-items": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Count dependencies with items",
                "description": "Count all dependencies between the entity with the given id and other items.",
                "operationId": "handleCountDependenciesWithItems",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/useradminservice/#count-followers": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Count followers",
                "description": "Count the followers of the user with the given id",
                "operationId": "handleCountUserFollowers",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.count.user.followers"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/useradminservice/#count-following": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "count following",
                "description": "Count the users the user with the given id is following.",
                "operationId": "handleCountUserFollowing",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.count.user.following"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/useradminservice/#count-user-access-tokens": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Count user access tokons",
                "description": "Count API access tokens belonging to the user with the given id.",
                "operationId": "handleCountAccessTokens",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.count.access.tokens"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-access-token": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Delete access token",
                "description": "Delete the access token having the given id. Return the deleted access token entity, if successful.",
                "operationId": "handleRemoveAccessToken",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.remove.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.id",
                        "in": "formData",
                        "description": "Access token id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Delete attachment",
                "description": "Delete the attachment with the given id. Return the deleted attachment.",
                "operationId": "handleDeleteAttachment",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.entity.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-capabilities-from-access-token": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token",
                    "go / e / Capability",
                    "go / e / x / Authorizable"
                ],
                "summary": "Delete capabilities from access token",
                "description": "Given a list/array of capabilities id's, delete these capabilities from the access token having the given id. The given capabilities are about the authorizable entity with the given id. Return the freshly updated access token entity.",
                "operationId": "handleRemoveCapabilitiesFromAccessToken",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.remove.capabilities.from.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.id",
                        "in": "formData",
                        "description": "Access token id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.authorizable.id",
                        "in": "formData",
                        "description": "The authorizable entity id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "Array of capabilities' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-dependency": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Delete dependency",
                "description": "Delete the dependency with the given id. Return true if successful.",
                "operationId": "handleDeleteDependency",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.itemservice.delete.dependency"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.dependency.id",
                        "in": "formData",
                        "description": "The dependency id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-extended-field": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Delete extended field",
                "description": "Delete the exetnded field with the given id. Return true if successful.",
                "operationId": "handleDeleteFieldExtended",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.delete.field.extended"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.id",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Extended Field Value"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-user": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Delete user",
                "description": "Delete the user with the given id. Return true if successful, false otherwise.",
                "operationId": "handleDeleteUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.delete.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-user-avatar": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Delete user avatar",
                "description": "Delete the avatar of the user with the given id. Return true if the operation succeeds.",
                "operationId": "handleDeleteUserAvatar",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.delete.user.avatar"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#delete-user-logo": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Delete logo avatar",
                "description": "Delete the logo of the user with the given id.  Return true if the operation succeeds.",
                "operationId": "handleDeleteUserLogo",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.delete.user.logo"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#execute-template": {
            "post": {
                "tags": [
                    "go / Template"
                ],
                "summary": "Execute a template",
                "description": "Run the given template on the Gravity server being called. Return an output object.",
                "operationId": "handleExecuteTemplate",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.execute.template"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.id",
                        "in": "formData",
                        "description": "Template id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.type",
                        "in": "formData",
                        "description": "Template type",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.template.name",
                        "in": "formData",
                        "description": "Template name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.content",
                        "in": "formData",
                        "description": "Template content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.description",
                        "in": "formData",
                        "description": "Template description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.template.parameters",
                        "in": "formData",
                        "description": "Arbitrary map of extra parameters the template execution may need",
                        "required": false,
                        "type": "map"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Template Output"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-access-tokens": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Fetch access tokons",
                "description": "Fetch a list of API access tokens belonging to the user with the given id.",
                "operationId": "handleFetchAccessTokens",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.access.tokens"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/API Access Token"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-attachments": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Fetch attachments",
                "description": "Fetch a list of attachments belonging to the item with the given id.",
                "operationId": "handleFetchAttachments",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.attachments"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The work item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-authorizable-contexts": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Authorizable",
                    "go / e / Authorizable-Context",
                    "go / e / Capability"
                ],
                "summary": "Fetch authorizable contexts",
                "description": "Fetch all authorizable contexts entities belonging to the user with the given id. An authorizable context is an entity that wraps the capabilities a role has over an authorizable entity.",
                "operationId": "fetchAuthorizableContexts",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.authorizable.contexts"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Authorizable Context"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch dependencies",
                "description": "Fetch a list of all dependencies belonging to the entity with the given id.",
                "operationId": "handleFetchDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-entity-web-link": {
            "post": {
                "tags": [
                    "go / Entity"
                ],
                "summary": "Fetch entity web link",
                "description": "Fetch the web link of the entity having the given id.",
                "operationId": "handleFetchEntityWebLink",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.entity.weblink"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-extended-fields-by-name": {
            "post": {
                "tags": [
                    "go / e / Extendable",
                    "go / e / Extended Field"
                ],
                "summary": "Fetch extended fields by name",
                "description": "Fetch a list of extended fields having the given name.",
                "operationId": "handleFetchExtendedFieldsWithName",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.fields.extended.with.name"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.name",
                        "in": "formData",
                        "description": "The extended field id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.field.extended.type",
                        "in": "formData",
                        "description": "The extended field type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extended Field"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-followers-ids": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch followers id's",
                "description": "Fetch id's of the followers of the user with the given id.",
                "operationId": "handleFetchUserFollowersIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user.followers.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-following-ids": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch following id's",
                "description": "Fetch the id's of users the user with the given id is following.",
                "operationId": "handleFetchUserFollowingIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user.following.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-source-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch source dependencies",
                "description": "Fetch a list of source dependencies of the entity having the given id.",
                "operationId": "handleFetchSourceDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.source.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-target-dependencies": {
            "post": {
                "tags": [
                    "go / e / x / a / Dependency",
                    "go / Entity"
                ],
                "summary": "Fetch target dependencies",
                "description": "Fetch a list of target dependencies of the entity having the given id.",
                "operationId": "handleFetchTargetDependencies",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.fetch.persistable.target.dependencies"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The entity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dependency"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-user-address": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Fetch user address",
                "description": "Fetch the address entity, if any, of the user having the given id.",
                "operationId": "handleFetchUserAddress",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user.address"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-user-avatar-weblink": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch user logo weblink",
                "description": "Fetch a web link to the avatar of the user with the given id.",
                "operationId": "handleFetchUserAvatarWebLink",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user.avatar.web.link"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-user-email": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Fetch user email",
                "description": "Fetch the email address of the user with the given id.",
                "operationId": "handleFetchUserEmailAddress",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.fetch.email.address"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-user-logo-weblink": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch user logo weblink",
                "description": "Fetch a web link to the logo of the user with the given id.",
                "operationId": "handleFetchUserLogoWebLink",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user.logo.web.link"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-user-with-id": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch user with id",
                "description": "Fetch the user with the given id.",
                "operationId": "handleFetchUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-users": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch users",
                "description": "Fetch all users, group and roles.",
                "operationId": "handleFetchUsers",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.users"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-users-names": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch users' names",
                "description": "Fetch an array of the names of all users.",
                "operationId": "handleFetchUserNames",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.users.names"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#fetch-users-with-ids": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Fetch users with id's",
                "description": "Fetch all users with the given id's. Return a JSONArray of users.",
                "operationId": "handleFetchUsersWithIds",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.fetch.users.with.ids"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.fetch.entities.ids.list",
                        "in": "formData",
                        "description": "An array of users' id's",
                        "required": true,
                        "type": "array",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/useradminservice/#follow": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Follow a user",
                "description": "Make a user follow another one. Return true if the action was successful, false otherwise.",
                "operationId": "handleFollowUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.follow.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.follower.id",
                        "in": "formData",
                        "description": "The follower (user) id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.following.id",
                        "in": "formData",
                        "description": "The id of the user to be followed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#sign-up": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "sign up",
                "description": "Request a user sign up. After a successful registration, Gravity will send a confirmation email to this new user with steps on how to activate its account. Return the newly created user entity.",
                "operationId": "handleRegisterUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.register.user"
                    },
                    {
                        "name": "gravity.rest.role.name",
                        "in": "formData",
                        "description": "Username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.password",
                        "in": "formData",
                        "description": "Password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.emailaddress",
                        "in": "formData",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.firstname",
                        "in": "formData",
                        "description": "First name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.lastname",
                        "in": "formData",
                        "description": "Last name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/useradminservice/#unfollow": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User"
                ],
                "summary": "Follow a user",
                "description": "Make a user unfollow another one. Return true if the action was successful, false otherwise.",
                "operationId": "handleUnfollowUser",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.unfollow.user"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.follower.id",
                        "in": "formData",
                        "description": "The follower (user) id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.following.id",
                        "in": "formData",
                        "description": "The id of the user being followed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-access-token": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token"
                ],
                "summary": "Update access token",
                "description": "Update the access token having the given id. Return the freshly updated access token entity.",
                "operationId": "handleUpdateAccessToken",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.update.access.token"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.id",
                        "in": "formData",
                        "description": "Access token id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.name",
                        "in": "formData",
                        "description": "Access token name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.description",
                        "in": "formData",
                        "description": "Access token description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.state",
                        "in": "formData",
                        "description": "Access token state. (State integer value)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.from.date",
                        "in": "formData",
                        "description": "Valid from date. Numeric (long) representation. 0 to reset",
                        "required": false,
                        "type": "long"
                    },
                    {
                        "name": "gravity.rest.access.token.valid.to.date",
                        "in": "formData",
                        "description": "Valid to date. Numeric (long) representation. 0 to reset",
                        "required": false,
                        "type": "long"
                    },
                    {
                        "name": "gravity.rest.access.token.is.disabled",
                        "in": "formData",
                        "description": "Is access token disabled?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "gravity.rest.access.token.is.inherit.all.authority",
                        "in": "formData",
                        "description": "Is the access token inheriting all authority from its owner?",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/API Access Token"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-access-token-context": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / a / API Access Token",
                    "go / e / API Access Token Context"
                ],
                "summary": "Update access token context",
                "description": "Update the access-token-context entity with the given id. Return the freshly updated access-token-context entity. An access-token-context is an entity wrapping the capabilities an access token has over an authorizable entity.",
                "operationId": "handleUpdateAccessTokenContext",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.update.access.token.context"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.context.id",
                        "in": "formData",
                        "description": "Access token context id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.access.token.context.is.inherit.all.authority",
                        "in": "formData",
                        "description": "Is the access token inheriting all authority from its owner?",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Access Token Context"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-address": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user address",
                "description": "Update the address info of the user having the given id. Return the freshly updated address entity.",
                "operationId": "handleChangeUserAddress",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.address"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.emailaddress",
                        "in": "formData",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.firstname",
                        "in": "formData",
                        "description": "First name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.lastname",
                        "in": "formData",
                        "description": "Last name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.change.birthday",
                        "in": "formData",
                        "description": "Birthdate (date as long value)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "gravity.rest.address.telephone",
                        "in": "formData",
                        "description": "Phone number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.website",
                        "in": "formData",
                        "description": "Website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.address1",
                        "in": "formData",
                        "description": "Address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.address2",
                        "in": "formData",
                        "description": "Address 2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.postalcode",
                        "in": "formData",
                        "description": "Postal code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.city",
                        "in": "formData",
                        "description": "City",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.province",
                        "in": "formData",
                        "description": "Province/State",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.change.country",
                        "in": "formData",
                        "description": "Country",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-attachment-description": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Update attachment description",
                "description": "Update the description of the attachment having the given id. Return the freshly updated attachment.",
                "operationId": "handleSetAttachmentDescription",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.set.entity.attachment.description"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.id",
                        "in": "formData",
                        "description": "The attachment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-birthdate": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user birthdate",
                "description": "Update the birthdate of the user having the given id. The date is given as a numeric (long) value. Return a freshly updated address object.",
                "operationId": "handleChangeUserBirthDay",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.birthday"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.change.birthday",
                        "in": "formData",
                        "description": "Birthdate (date as long)",
                        "required": true,
                        "type": "long"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-city": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user city",
                "description": "Update the address city name of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserCity",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.city"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.city",
                        "in": "formData",
                        "description": "City",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-country": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user country",
                "description": "Update the country name of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserCountry",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.country"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.change.country",
                        "in": "formData",
                        "description": "Country",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-email": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user email address",
                "description": "Update the email address of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserEmailAddress",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.emailaddress"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.emailaddress",
                        "in": "formData",
                        "description": "Email address ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-first-address": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user first address",
                "description": "Update the first address of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserAddress1",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.address1"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.address1",
                        "in": "formData",
                        "description": "Address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-first-name": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user first name",
                "description": "Update the first name of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserFirstName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.firstname"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.firstname",
                        "in": "formData",
                        "description": "First name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-last-name": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user last name",
                "description": "Update the last name of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserLastName",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.lastname"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.lastname",
                        "in": "formData",
                        "description": "Last name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-phone-number": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user phone number",
                "description": "Update the phone number of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserTelephone",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.telephone"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.telephone",
                        "in": "formData",
                        "description": "Phone number ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-postal-code": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user postal code",
                "description": "Update the postal code belonging to the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserPostalCode",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.postalcode"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.postalcode",
                        "in": "formData",
                        "description": "Postal code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-province": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user province",
                "description": "Update the province name of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserProvince",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.province"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.province",
                        "in": "formData",
                        "description": "Province",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-second-address": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user second address",
                "description": "Update the second address of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserAddress2",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.address2"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.address2",
                        "in": "formData",
                        "description": "Address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#update-user-website": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / a / User",
                    "go / e / x / Address"
                ],
                "summary": "Update user website",
                "description": "Update the website address of the user having the given id. Return a freshly updated address entity.",
                "operationId": "handleChangeUserWebSite",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.change.user.website"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.address.website",
                        "in": "formData",
                        "description": "The website address ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/useradminservice/#upload-attachment": {
            "post": {
                "tags": [
                    "go / e / x / Attachment",
                    "go / Entity"
                ],
                "summary": "Upload attachment",
                "description": "Create an attachment by uploading its content file, then attach it to the entity with the given id. Return the newly created attachment entity. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.service.upload.attachment.file"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.attachment"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.entity.id",
                        "in": "formData",
                        "description": "The id of the entity to attach to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.attachment.description",
                        "in": "formData",
                        "description": "The attachment description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Pick a file to upload:",
                        "in": "formData",
                        "description": "Attachment file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/useradminservice/#upload-user-avatar": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / Attachment",
                    "go / e / x / a / User",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Upload user avatar",
                "description": "Upload an avatar/picture for the user with the given id. Return the newly created avatar as attachment. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUserAvatarUpload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.upload.user.avatar"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.user.avatar"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Pick a user avatar",
                        "in": "formData",
                        "description": "User avatar / picture",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/useradminservice/#upload-user-logo": {
            "post": {
                "tags": [
                    "go / s / UserAdminService",
                    "go / e / x / Attachment",
                    "go / e / x / a / User",
                    "go / e / x / Image | Icon"
                ],
                "summary": "Upload user logo",
                "description": "Upload a logo for the user with the given id. Return the newly created logo as attachment. Please note that the file content itself including all request parameters must be sent with a [multipart/form-data] media type.",
                "operationId": "handleUserlogoUpload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gravity.rest.method",
                        "in": "formData",
                        "description": "GRAPI method (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.method.useradmin.upload.user.logo"
                    },
                    {
                        "name": "gravity.rest.file.upload.type",
                        "in": "formData",
                        "description": "Upload type (Don't edit!)",
                        "required": true,
                        "type": "string",
                        "default": "gravity.rest.file.upload.type.user.logo"
                    },
                    {
                        "name": "gravity.rest.access.token.token",
                        "in": "formData",
                        "description": "GRAPI access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gravity.rest.user.id",
                        "in": "formData",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Pick a user logo to upload:",
                        "in": "formData",
                        "description": "Image file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "API Access Token": {
            "type": "object",
            "required": [
                "gravity.rest.access.token.description",
                "gravity.rest.access.token.description.content.type",
                "gravity.rest.access.token.has.expired",
                "gravity.rest.access.token.id",
                "gravity.rest.access.token.is.disabled",
                "gravity.rest.access.token.is.inherit.all.authority",
                "gravity.rest.access.token.name",
                "gravity.rest.access.token.owner.id",
                "gravity.rest.access.token.owner.name",
                "gravity.rest.access.token.state",
                "gravity.rest.access.token.token",
                "gravity.rest.access.token.valid.from.date",
                "gravity.rest.access.token.valid.to.date",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.access.token.id": {
                    "type": "string",
                    "description": "The access token id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.access.token.name": {
                    "type": "string",
                    "description": "The access token name"
                },
                "gravity.rest.access.token.token": {
                    "type": "string",
                    "description": "The access token value (The string token itself)"
                },
                "gravity.rest.access.token.description": {
                    "type": "string",
                    "description": "The access token description"
                },
                "gravity.rest.access.token.is.inherit.all.authority": {
                    "type": "boolean",
                    "description": "Whether the user of this access token inherits all capabilities of its issuer/owner",
                    "default": false
                },
                "gravity.rest.access.token.has.expired": {
                    "type": "boolean",
                    "description": "Whether this access token has expired",
                    "default": false
                },
                "gravity.rest.access.token.is.disabled": {
                    "type": "boolean",
                    "description": "Whether this access token is disabled",
                    "default": false
                },
                "gravity.rest.access.token.state": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The access access token current state: ENABLED=1, DISABLED=2"
                },
                "gravity.rest.access.token.valid.from.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The date this access token is valid from. Date is represented as a numeric long value"
                },
                "gravity.rest.access.token.valid.to.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The date until which this access token will be valid. Date is represented as a numeric long value"
                },
                "gravity.rest.access.token.owner.id": {
                    "type": "string",
                    "description": "The id of the user owning this access token"
                },
                "gravity.rest.access.token.owner.name": {
                    "type": "string",
                    "description": "The name of the user owning this access token"
                },
                "gravity.rest.access.token.contexts": {
                    "type": "array",
                    "description": "A list of all access token contexts the owner of this token holds. A context wraps an access token, an athorizable entity (e.g, item or filter,..) and a collection of capabilities in one containing entity, which reads as follows: Within a given context, an access token has the given capabilities (authority) over the given (authorizable) entity. Athorizables in Gravity denote a subset of entities over which authority can/cannot be performed by a user, e.g, one may read an item, the other may not.",
                    "items": {
                        "$ref": "#/definitions/Access Token Context"
                    }
                },
                "gravity.rest.access.token.description.content.type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The content type of this access token description: MARKDOWN=1, MEDIAWIKI=2"
                }
            },
            "description": "An access token allows programmatic access to Gravity services via REST API"
        },
        "Access Token Context": {
            "type": "object",
            "required": [
                "gravity.rest.access.token.context.authorizable",
                "gravity.rest.access.token.context.capabilities",
                "gravity.rest.access.token.context.id",
                "gravity.rest.access.token.context.is.inherit.all.authority",
                "gravity.rest.access.token.context.token.id",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.access.token.context.id": {
                    "type": "string",
                    "description": "The token context id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.access.token.context.token.id": {
                    "type": "string",
                    "description": "The id of the token this conetxt belongs to.\t Within this context, the access token with this id has this contex capabilities (authority) over this context (authorizable) entity"
                },
                "gravity.rest.access.token.context.authorizable": {
                    "description": "The authorizable entity  (e.g, item or filter,..) this context is about. Athorizables in Gravity denote a subset of entities over which capabilities (authority) can/cannot be performed by a user, e.g, one may read an item, the other may not.",
                    "$ref": "#/definitions/Authorizable"
                },
                "gravity.rest.access.token.context.is.inherit.all.authority": {
                    "type": "boolean",
                    "description": "Whether this context's token inherits all capabilities from the token owner/creator. If true, then the access token and its owner/creator have, at any given time, exactly the same authority over the authorizable entity of this context",
                    "default": false
                },
                "gravity.rest.access.token.context.capabilities": {
                    "type": "array",
                    "description": "A list of capabilities (authority) granted to this token over the authorizable entity of this context",
                    "items": {
                        "$ref": "#/definitions/Capability"
                    }
                }
            },
            "description": "A context wraps an access token, an athorizable entity (e.g, item or filter,..) and a collection of capabilities in one containing entity, which reads as follows: Within this context, this access token has these capabilities (authority) over this (authorizable) entity. Athorizables in Gravity denote a subset of entities over which authority can/cannot be performed by a user, e.g, one may read an item, the other may not."
        },
        "Address": {
            "type": "object",
            "required": [
                "gravity.rest.address.address1",
                "gravity.rest.address.emailaddress",
                "gravity.rest.address.firstname",
                "gravity.rest.address.id",
                "gravity.rest.address.lastname",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.address.id": {
                    "type": "string",
                    "description": "The address id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.address.firstname": {
                    "type": "string",
                    "description": "The address holder first name"
                },
                "gravity.rest.address.lastname": {
                    "type": "string",
                    "description": "The address holder last name"
                },
                "gravity.rest.address.emailaddress": {
                    "type": "string",
                    "description": "The address holder email"
                },
                "gravity.rest.address.website": {
                    "type": "string",
                    "description": "The address holder website"
                },
                "gravity.rest.address.telephone": {
                    "type": "string",
                    "description": "The address holder phone number"
                },
                "gravity.rest.address.address1": {
                    "type": "string",
                    "description": "The first address"
                },
                "gravity.rest.address.address2": {
                    "type": "string",
                    "description": "The second address"
                },
                "gravity.rest.address.postalcode": {
                    "type": "string",
                    "description": "Postal code"
                },
                "gravity.rest.address.city": {
                    "type": "string",
                    "description": "City"
                },
                "gravity.rest.address.province": {
                    "type": "string",
                    "description": "Province/State"
                },
                "gravity.rest.address.change.country": {
                    "type": "string",
                    "description": "Country"
                },
                "gravity.rest.address.change.birthday": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The address holder birthdate (as a long value)"
                }
            }
        },
        "Application": {
            "type": "object",
            "required": [
                "gravity.rest.application.description",
                "gravity.rest.application.id",
                "gravity.rest.application.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.application.id": {
                    "type": "string",
                    "description": "The application id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.application.name": {
                    "type": "string",
                    "description": "The application name"
                },
                "gravity.rest.application.description": {
                    "type": "string",
                    "description": "The application description"
                },
                "gravity.rest.application.workflows": {
                    "type": "array",
                    "description": "The workflows this application belongs to",
                    "items": {
                        "$ref": "#/definitions/Workflow"
                    }
                }
            }
        },
        "Application-Workflow-ItemType": {
            "type": "object",
            "required": [
                "gravity.rest.applicationWorkflowEntitytype.application",
                "gravity.rest.applicationWorkflowEntitytype.counter",
                "gravity.rest.applicationWorkflowEntitytype.entitytype",
                "gravity.rest.applicationWorkflowEntitytype.id",
                "gravity.rest.applicationWorkflowEntitytype.workflow",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.applicationWorkflowEntitytype.id": {
                    "type": "string",
                    "description": "The ApplicationLifeCycleItemType id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.applicationWorkflowEntitytype.application": {
                    "description": "The application in this ApplicationLifeCycleItemType entity",
                    "$ref": "#/definitions/Application"
                },
                "gravity.rest.applicationWorkflowEntitytype.workflow": {
                    "description": "The workflow in this ApplicationLifeCycleItemType entity",
                    "$ref": "#/definitions/Workflow"
                },
                "gravity.rest.applicationWorkflowEntitytype.entitytype": {
                    "description": "The entity type in this ApplicationLifeCycleItemType entity",
                    "$ref": "#/definitions/Entity Type"
                },
                "gravity.rest.applicationWorkflowEntitytype.counter": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The counter being used by this ApplicationLifeCycleItemType entity"
                }
            }
        },
        "Attachment": {
            "type": "object",
            "required": [
                "gravity.rest.attachment.creationdate",
                "gravity.rest.attachment.creator.id",
                "gravity.rest.attachment.creator.name",
                "gravity.rest.attachment.download.web.link",
                "gravity.rest.attachment.id",
                "gravity.rest.attachment.is.image",
                "gravity.rest.attachment.name",
                "gravity.rest.attachment.persistable.id",
                "gravity.rest.attachment.size",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template"
            ],
            "properties": {
                "gravity.rest.attachment.id": {
                    "type": "string",
                    "description": "The attachment id"
                },
                "gravity.rest.attachment.creationdate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The attachment creation date as a long"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.attachment.name": {
                    "type": "string",
                    "description": "The attachment name"
                },
                "gravity.rest.attachment.description": {
                    "type": "string",
                    "description": "The attachment description"
                },
                "gravity.rest.attachment.creator.id": {
                    "type": "string",
                    "description": "The attachment creator id"
                },
                "gravity.rest.attachment.persistable.id": {
                    "type": "string",
                    "description": "The id of the entity this attachment belongs to"
                },
                "gravity.rest.attachment.mimetype": {
                    "type": "string",
                    "description": "The attachment mime-type if available"
                },
                "gravity.rest.attachment.size": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The attachment size"
                },
                "gravity.rest.attachment.creator.name": {
                    "type": "string",
                    "description": "The attachment creator name"
                },
                "gravity.rest.attachment.download.web.link": {
                    "type": "string",
                    "description": "A link to download this attachment from"
                },
                "gravity.rest.attachment.is.image": {
                    "type": "boolean",
                    "description": "Whether this attachment is an image/picture",
                    "default": false
                }
            }
        },
        "Authorizable": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.id",
                "gravity.rest.authorizable.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.authorizable.id": {
                    "type": "string",
                    "description": "The authorizable id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                }
            },
            "description": "An authorizable is a persistent entity (work item, filter,.. etc) over which user authority can/cannot be performed. One may read an item, the other may not, for example"
        },
        "Authorizable Context": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.context.authorizable",
                "gravity.rest.authorizable.context.capabilities",
                "gravity.rest.authorizable.context.id",
                "gravity.rest.authorizable.context.role",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.authorizable.context.id": {
                    "type": "string",
                    "description": "The authorizable context id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.authorizable.context.authorizable": {
                    "description": "The authorizable belonging to this context",
                    "$ref": "#/definitions/Authorizable"
                },
                "gravity.rest.authorizable.context.role": {
                    "description": "The role owning this context",
                    "$ref": "#/definitions/Role"
                },
                "gravity.rest.authorizable.context.capabilities": {
                    "type": "array",
                    "description": "A list of capabilities granted to the role over the authorizable (entity) within this context",
                    "items": {
                        "$ref": "#/definitions/Capability"
                    }
                }
            }
        },
        "Capability": {
            "type": "object",
            "required": [
                "gravity.rest.capability.can.delete",
                "gravity.rest.capability.can.description",
                "gravity.rest.capability.class.name",
                "gravity.rest.capability.id",
                "gravity.rest.capability.name",
                "gravity.rest.capability.value",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.capability.id": {
                    "type": "string",
                    "description": "The capability id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.capability.class.name": {
                    "type": "string",
                    "description": "The capability (Java) class Name"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.capability.can.delete": {
                    "type": "boolean",
                    "description": "Whether this is a deletion capability",
                    "default": false
                },
                "gravity.rest.capability.name": {
                    "type": "string",
                    "description": "The capability name"
                },
                "gravity.rest.capability.value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The capability value"
                },
                "gravity.rest.capability.can.description": {
                    "type": "string",
                    "description": "The capability description"
                }
            }
        },
        "Comment": {
            "type": "object",
            "required": [
                "gravity.rest.comment.content.type",
                "gravity.rest.comment.creator",
                "gravity.rest.comment.discussion.id",
                "gravity.rest.comment.id",
                "gravity.rest.comment.subject",
                "gravity.rest.comment.type",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.comment.id": {
                    "type": "string",
                    "description": "The comment id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.comment.subject": {
                    "type": "string",
                    "description": "The comment subject"
                },
                "gravity.rest.comment.creator": {
                    "description": "The comment creator",
                    "$ref": "#/definitions/User"
                },
                "gravity.rest.comment.description": {
                    "type": "string",
                    "description": "The comment description"
                },
                "gravity.rest.comment.htmldescription": {
                    "type": "string",
                    "description": "The comment description in HTML format"
                },
                "gravity.rest.comment.discussion.id": {
                    "type": "string",
                    "description": "The id of the discussion this comment belongs to"
                },
                "gravity.rest.parent.comment.id": {
                    "type": "string",
                    "description": "The id of the parent comment"
                },
                "gravity.rest.comment.type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The comment type: USER=0, SYSTEM=1"
                },
                "gravity.rest.comment.content.type": {
                    "type": "string",
                    "description": "The comment content type"
                }
            }
        },
        "Condition Field": {
            "type": "object",
            "required": [
                "gravity.rest.condition.field.condition",
                "gravity.rest.condition.field.id",
                "gravity.rest.condition.field.member.type",
                "gravity.rest.condition.field.name",
                "gravity.rest.condition.field.sql.template",
                "gravity.rest.condition.field.type",
                "gravity.rest.condition.field.value",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.condition.field.id": {
                    "type": "string",
                    "description": "The condition field id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.condition.field.name": {
                    "type": "string",
                    "description": "The condition field name"
                },
                "gravity.rest.condition.field.condition": {
                    "type": "string",
                    "description": "The condition string itself. The condition is the relation between this field and its value"
                },
                "gravity.rest.condition.field.type": {
                    "type": "string",
                    "description": "The condition field type. The Java fully qualified class name"
                },
                "gravity.rest.condition.field.member.type": {
                    "type": "string",
                    "description": "The condition field member type. The Java fully qualified class name"
                },
                "gravity.rest.condition.field.sql.template": {
                    "type": "string",
                    "description": "The condition as an SQL template"
                },
                "gravity.rest.condition.field.value": {
                    "type": "string",
                    "description": "The condition field value"
                }
            }
        },
        "Condition Group": {
            "type": "object",
            "required": [
                "gravity.rest.condition.field.list.ids",
                "gravity.rest.condition.group.id",
                "gravity.rest.condition.group.is.root",
                "gravity.rest.condition.group.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.condition.group.id": {
                    "type": "string",
                    "description": "The condition group id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.condition.field.list.ids": {
                    "type": "array",
                    "description": "The id's of the condition fields belonging to this group",
                    "items": {
                        "type": "string"
                    }
                },
                "gravity.rest.condition.group.name": {
                    "type": "string",
                    "description": "The condition group name"
                },
                "gravity.rest.condition.group.is.root": {
                    "type": "boolean",
                    "description": "Whether this conditin group is a root one",
                    "default": false
                }
            }
        },
        "Configuration": {
            "type": "object",
            "required": [
                "gravity.rest.configuration.factory.pid",
                "gravity.rest.configuration.id",
                "gravity.rest.configuration.name",
                "gravity.rest.configuration.pid",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.configuration.id": {
                    "type": "string",
                    "description": "The configuration id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.configuration.pid": {
                    "type": "string",
                    "description": "The configuration PID (Persistent ID)"
                },
                "gravity.rest.configuration.factory.pid": {
                    "type": "string",
                    "description": "The configuration factory id"
                },
                "gravity.rest.configuration.name": {
                    "type": "string",
                    "description": "The configuration name"
                },
                "gravity.rest.configuration.properties": {
                    "type": "object",
                    "description": "A map containing arbitrary configuration properties",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "Customized Filter View": {
            "type": "object",
            "required": [
                "gravity.rest.customized.filter.view.field.type",
                "gravity.rest.customized.filter.view.id",
                "gravity.rest.customized.filter.view.name",
                "gravity.rest.customized.filter.view.sorting",
                "gravity.rest.customized.filter.view.weight",
                "gravity.rest.customized.filter.view.width",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.customized.filter.view.id": {
                    "type": "string",
                    "description": "The customized filter view id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.customized.filter.view.name": {
                    "type": "string",
                    "description": "The customized filter view name"
                },
                "gravity.rest.customized.filter.view.sorting": {
                    "type": "string",
                    "description": "The customized filter view sorting"
                },
                "gravity.rest.customized.filter.view.width": {
                    "type": "string",
                    "description": "The customized filter view width"
                },
                "gravity.rest.customized.filter.view.weight": {
                    "type": "string",
                    "description": "The customized filter view weight"
                },
                "gravity.rest.customized.filter.view.field.type": {
                    "type": "string",
                    "description": "The customized filter view field type"
                }
            }
        },
        "DataCell": {
            "type": "object",
            "required": [
                "gravity.rest.data.table.cell.formatted.value",
                "gravity.rest.data.table.cell.id",
                "gravity.rest.data.table.cell.index",
                "gravity.rest.data.table.cell.is.numeric",
                "gravity.rest.data.table.cell.value",
                "gravity.rest.data.table.column.id",
                "gravity.rest.data.table.row.id"
            ],
            "properties": {
                "gravity.rest.data.table.cell.id": {
                    "type": "string",
                    "description": "The cell id"
                },
                "gravity.rest.data.table.cell.is.numeric": {
                    "type": "boolean",
                    "description": "Whether this cell has numeric data",
                    "default": false
                },
                "gravity.rest.data.table.cell.value": {
                    "type": "string",
                    "description": "This cell value"
                },
                "gravity.rest.data.table.cell.formatted.value": {
                    "type": "string",
                    "description": "This cell formatted or pretty-printed value"
                },
                "gravity.rest.data.table.cell.value.web.link": {
                    "type": "string",
                    "description": "An optional web link to this cell value"
                },
                "gravity.rest.data.table.cell.index": {
                    "type": "string",
                    "description": "The index of this cell within its parent row"
                },
                "gravity.rest.data.table.row.id": {
                    "type": "string",
                    "description": "The parent row id"
                },
                "gravity.rest.data.table.column.id": {
                    "type": "string",
                    "description": "The parent column id"
                }
            }
        },
        "DataColumn": {
            "type": "object",
            "required": [
                "gravity.rest.data.table.column.class.type",
                "gravity.rest.data.table.column.id",
                "gravity.rest.data.table.column.index",
                "gravity.rest.data.table.column.is.numeric",
                "gravity.rest.data.table.column.name",
                "gravity.rest.data.table.id"
            ],
            "properties": {
                "gravity.rest.data.table.column.id": {
                    "type": "string",
                    "description": "The data column id"
                },
                "gravity.rest.data.table.column.is.numeric": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total sum of this column numeric data. Only provided if this is a numeric column"
                },
                "gravity.rest.data.table.column.class.type": {
                    "type": "string",
                    "description": "The (Java) fully qualified class name representing the type of this column data. Example: java.lang.Integer, java.lang.String, and son on. Defaults to java.lang.String"
                },
                "gravity.rest.data.table.column.name": {
                    "type": "string",
                    "description": "This column name"
                },
                "gravity.rest.data.table.column.is.sort.column": {
                    "type": "boolean",
                    "description": "Whether this column can be used to sort its parent table",
                    "default": false
                },
                "gravity.rest.data.table.column.index": {
                    "type": "string",
                    "description": "The index of this column within its parent table"
                },
                "gravity.rest.data.table.id": {
                    "type": "string",
                    "description": "The parent table id"
                }
            }
        },
        "DataRow": {
            "type": "object",
            "required": [
                "gravity.rest.data.table.id",
                "gravity.rest.data.table.row.cells",
                "gravity.rest.data.table.row.id"
            ],
            "properties": {
                "gravity.rest.data.table.row.id": {
                    "type": "string",
                    "description": "The data row id"
                },
                "gravity.rest.data.table.row.group": {
                    "type": "string",
                    "description": "The group this row belongs to"
                },
                "gravity.rest.data.table.row.cells": {
                    "type": "array",
                    "description": "This row data cells",
                    "items": {
                        "$ref": "#/definitions/DataCell"
                    }
                },
                "gravity.rest.data.table.id": {
                    "type": "string",
                    "description": "The parent table id"
                }
            }
        },
        "DataTable": {
            "type": "object",
            "required": [
                "gravity.rest.data.table.id",
                "gravity.rest.data.table.title"
            ],
            "properties": {
                "gravity.rest.data.table.id": {
                    "type": "string",
                    "description": "The data table id"
                },
                "gravity.rest.data.table.title": {
                    "type": "string",
                    "description": "The data table title"
                },
                "gravity.rest.data.table.rows": {
                    "type": "array",
                    "description": "The data table rows",
                    "items": {
                        "$ref": "#/definitions/DataRow"
                    }
                },
                "gravity.rest.data.table.columns": {
                    "type": "array",
                    "description": "The data table columns",
                    "items": {
                        "$ref": "#/definitions/DataColumn"
                    }
                }
            }
        },
        "Database": {
            "type": "object",
            "required": [
                "gravity.rest.targetdatabase.default.port",
                "gravity.rest.targetdatabase.display.name",
                "gravity.rest.targetdatabase.driver.name",
                "gravity.rest.targetdatabase.is.port.required",
                "gravity.rest.targetdatabase.is.user.required"
            ],
            "properties": {
                "gravity.rest.targetdatabase.display.name": {
                    "type": "string",
                    "description": "Database diplay name"
                },
                "gravity.rest.targetdatabase.driver.name": {
                    "type": "string",
                    "description": "Database driver name"
                },
                "gravity.rest.targetdatabase.default.port": {
                    "type": "string",
                    "description": "Database default port"
                },
                "gravity.rest.targetdatabase.is.port.required": {
                    "type": "boolean",
                    "description": "Whther a port is required",
                    "default": false
                },
                "gravity.rest.targetdatabase.is.user.required": {
                    "type": "boolean",
                    "description": "Whether a user is required",
                    "default": false
                }
            }
        },
        "Dependency": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.name",
                "gravity.rest.dependency.dependencytype",
                "gravity.rest.dependency.id",
                "gravity.rest.dependency.isreverse",
                "gravity.rest.dependency.istemplate",
                "gravity.rest.dependency.source.entity.type.id",
                "gravity.rest.dependency.source.entity.type.name",
                "gravity.rest.dependency.source.persistable.id",
                "gravity.rest.dependency.source.persistable.name",
                "gravity.rest.dependency.source.typeable.classname",
                "gravity.rest.dependency.target.entity.type.id",
                "gravity.rest.dependency.target.entity.type.name",
                "gravity.rest.dependency.target.persistable.id",
                "gravity.rest.dependency.target.persistable.name",
                "gravity.rest.dependency.target.typeable.classname",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.dependency.id": {
                    "type": "string",
                    "description": "The dependency id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.dependency.istemplate": {
                    "type": "boolean",
                    "description": "Whether the dependency is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                },
                "gravity.rest.dependency.source.persistable.id": {
                    "type": "string",
                    "description": "The id of the source entity"
                },
                "gravity.rest.dependency.target.persistable.id": {
                    "type": "string",
                    "description": "The id of the target entity"
                },
                "gravity.rest.dependency.dependencytype": {
                    "type": "boolean",
                    "description": "Whether the dependency is a definition",
                    "default": false
                },
                "gravity.rest.dependency.target.entity.type.id": {
                    "type": "string",
                    "description": "The traget entity type id"
                },
                "gravity.rest.dependency.target.entity.type.name": {
                    "type": "string",
                    "description": "The traget entity type name"
                },
                "gravity.rest.dependency.target.persistable.name": {
                    "type": "string",
                    "description": "The traget entity name"
                },
                "gravity.rest.dependency.target.persistable.description": {
                    "type": "string",
                    "description": "The traget entity description"
                },
                "gravity.rest.dependency.source.entity.type.id": {
                    "type": "string",
                    "description": "The source entity type id"
                },
                "gravity.rest.dependency.source.entity.type.name": {
                    "type": "string",
                    "description": "The source entity type name"
                },
                "gravity.rest.dependency.source.persistable.name": {
                    "type": "string",
                    "description": "The source persistable name"
                },
                "gravity.rest.dependency.source.persistable.description": {
                    "type": "string",
                    "description": "The source entity description"
                },
                "gravity.rest.dependency.source.typeable.classname": {
                    "type": "string",
                    "description": "The source typeable (Java) class nam"
                },
                "gravity.rest.dependency.target.typeable.classname": {
                    "type": "string",
                    "description": "The target typeable (Java) class name"
                },
                "gravity.rest.dependency.isreverse": {
                    "type": "boolean",
                    "description": "Whether the dependency is a reverse one",
                    "default": false
                }
            }
        },
        "Dependency Type": {
            "type": "object",
            "required": [
                "gravity.rest.dependencytype.cardinality",
                "gravity.rest.dependencytype.id",
                "gravity.rest.dependencytype.isbase",
                "gravity.rest.dependencytype.name",
                "gravity.rest.dependencytype.reversname",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.dependencytype.id": {
                    "type": "string",
                    "description": "The Dependency type id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.dependencytype.name": {
                    "type": "string",
                    "description": "The Dependency type name"
                },
                "gravity.rest.dependencytype.reversname": {
                    "type": "string",
                    "description": "The Dependency type reverse name"
                },
                "gravity.rest.dependencytype.cardinality": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The Dependency type cardinality: ONE_TO_ONE=0, ONE_TO_MANY=1, MANY_TO_ONE=2, MANY_TO_MANY=3"
                },
                "gravity.rest.dependencytype.description": {
                    "type": "string",
                    "description": "The Dependency type description"
                },
                "gravity.rest.dependencytype.isbase": {
                    "type": "boolean",
                    "description": "Whether this Dependency type is a base type",
                    "default": false
                },
                "gravity.rest.dependencytype.icon.id": {
                    "type": "boolean",
                    "description": "The Dependency type icon id",
                    "default": false
                }
            }
        },
        "Discussion": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.name",
                "gravity.rest.discussion.id",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.discussion.id": {
                    "type": "string",
                    "description": "The discussion id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                },
                "gravity.rest.discussion.discussionabout": {
                    "type": "string",
                    "description": "What the discussion is about"
                },
                "gravity.rest.discussion.item.id": {
                    "type": "string",
                    "description": "The id of the work item this discussion belongs to"
                },
                "gravity.rest.discussion.comments": {
                    "type": "array",
                    "description": "A list of comments belonging to this discussion. Only included if the parameter 'gravity.rest.discussion.include.comments=true' is provided in the request",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                },
                "gravity.rest.discussion.comments.count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The count of this discussion comments"
                }
            }
        },
        "Entity Type": {
            "type": "object",
            "required": [
                "gravity.rest.entity.version",
                "gravity.rest.entitytype.id",
                "gravity.rest.entitytype.name",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.entitytype.id": {
                    "type": "string",
                    "description": "The entity type id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entitytype.tyepeable.classname": {
                    "type": "string",
                    "description": "JAVA class name of this entity type"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.entitytype.name": {
                    "type": "string",
                    "description": "The entity type name"
                },
                "gravity.rest.entitytype.description": {
                    "type": "string",
                    "description": "The entity type description"
                },
                "gravity.rest.entitytype.icon.id": {
                    "type": "string",
                    "description": "The entity type icon id"
                },
                "gravity.rest.entitytype.icon": {
                    "description": "The entity type icon.  Only added to the returned result if the boolean paramater [gravity.rest.entitytype.include.icon[ is present in the request and is true",
                    "$ref": "#/definitions/Icon"
                },
                "gravity.rest.entitytype.is.basetype": {
                    "type": "boolean",
                    "description": "Whether this entity type is a base type",
                    "default": false
                }
            }
        },
        "Extended Field": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.field.extended.Value.entity.type.name",
                "gravity.rest.field.extended.extendable.class.simple.name",
                "gravity.rest.field.extended.extendable.id",
                "gravity.rest.field.extended.extendable.is.template",
                "gravity.rest.field.extended.fetch.original.field.values",
                "gravity.rest.field.extended.id",
                "gravity.rest.field.extended.label",
                "gravity.rest.field.extended.name",
                "gravity.rest.field.extended.valid.value.class.name",
                "gravity.rest.field.extended.weight",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.field.extended.id": {
                    "type": "string",
                    "description": "Extended field id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.field.extended.name": {
                    "type": "string",
                    "description": "Extended field name"
                },
                "gravity.rest.field.extended.label": {
                    "type": "string",
                    "description": "Extended field label"
                },
                "gravity.rest.field.extended.weight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Extended field weight. For example, a weight can be used to influence this field order of appearance in some view."
                },
                "gravity.rest.field.extended.values": {
                    "type": "array",
                    "description": "Extended field values, if any",
                    "items": {
                        "$ref": "#/definitions/Extended Field Value"
                    }
                },
                "gravity.rest.field.extended.type": {
                    "type": "string",
                    "description": "A short string represenation of an extended field type One of the following: string,number,boolean,bytearray,date,entity,secret"
                },
                "gravity.rest.field.extended.selected.field.value": {
                    "description": "One of this field's values being currently set as selected, if any",
                    "$ref": "#/definitions/Extended Field Value"
                },
                "gravity.rest.field.extended.original.field.extended": {
                    "description": "The extended field this field was cloned from, if any",
                    "$ref": "#/definitions/Extended Field"
                },
                "gravity.rest.field.extended.fetch.original.field.values": {
                    "type": "array",
                    "description": "The values originating from the extended field this field was cloned from, if any",
                    "items": {
                        "$ref": "#/definitions/Extended Field Value"
                    }
                },
                "gravity.rest.field.extended.extendable.id": {
                    "type": "string",
                    "description": "The id of the entity this field belongs to"
                },
                "gravity.rest.field.extended.extendable.class.simple.name": {
                    "type": "string",
                    "description": "The simple JAVA class name of the entity this field belongs to"
                },
                "gravity.rest.field.extended.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this field belongs to a template entity",
                    "default": false
                },
                "gravity.rest.field.extended.valid.value.class.name": {
                    "type": "string",
                    "description": "Only valid if this field is of type: IEntityFieldExtendeded. Such a field is meant to hold entities as values. In this case, a Java full-package name of the interface (an IPersistable sub-type) of acceptable values type"
                },
                "gravity.rest.field.extended.Value.entity.type.name": {
                    "type": "string",
                    "description": "Only valid if this field is of type: IEntityTypeFieldExtendeded. Such a field is meant to hold entity-types as values. In this case, a Java full-package name of the interface (an IEntityType sub-type) of acceptable values"
                }
            },
            "description": "An entity can be extended by new fields holding  values such as strings, numbers, dates, other entities, etc."
        },
        "Extended Field Value": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.field.value.field.extended.id",
                "gravity.rest.field.value.id",
                "gravity.rest.field.value.value",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.field.value.id": {
                    "type": "string",
                    "description": "Extended field value id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.field.value.value": {
                    "type": "object",
                    "description": "Value of this field"
                },
                "gravity.rest.field.value.field.extended.id": {
                    "type": "string",
                    "description": "Id of the extended field this value belongs to"
                }
            }
        },
        "Filter": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.filter.creator.id",
                "gravity.rest.filter.entity.info.enum.key",
                "gravity.rest.filter.id",
                "gravity.rest.filter.is.filter.private",
                "gravity.rest.filter.name",
                "gravity.rest.filter.status",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.filter.id": {
                    "type": "string",
                    "description": "The filter id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.filter.name": {
                    "type": "string",
                    "description": "The filter name"
                },
                "gravity.customized.filter.view.list.ids": {
                    "type": "string",
                    "description": "The application id"
                },
                "gravity.rest.filter.is.filter.private": {
                    "type": "boolean",
                    "description": "Whether this filter is private",
                    "default": false
                },
                "gravity.rest.filter.status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The filter status: PRIVATE=1, PUBLIC=2"
                },
                "gravity.rest.filter.entity.info.enum.key": {
                    "type": "string",
                    "description": "The filter entity info: WORKDOCUMENT=01, APPLICATION=02, LIFECYCLE=03"
                },
                "gravity.rest.filter.creator.id": {
                    "type": "string",
                    "description": "The filter creator id"
                },
                "gravity.rest.filter.modification": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The modification date (as a long) of this filter"
                },
                "gravity.rest.filter.items.count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The count of items belonging to this filter. If no count is executed/computed yet, then the value: -1 is returned"
                }
            }
        },
        "Icon": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.icon.id": {
                    "type": "string",
                    "description": "The icon id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.icon.name": {
                    "type": "string",
                    "description": "The icon name"
                },
                "gravity.rest.icon.description": {
                    "type": "string",
                    "description": "The icon description"
                },
                "gravity.rest.icon.download.web.link": {
                    "type": "string",
                    "description": "The web link to download this icon from"
                },
                "gravity.rest.icon.bytearray": {
                    "type": "array",
                    "description": "The icon bytes content. Only added to the returned result if the boolean paramater [gravity.rest.icon.include.bytes] is present in the request and is true",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            }
        },
        "JSONObject": {
            "type": "object"
        },
        "Role": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.role.id",
                "gravity.rest.role.name",
                "gravity.rest.role.type"
            ],
            "properties": {
                "gravity.rest.role.id": {
                    "type": "string",
                    "description": "The role id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                },
                "gravity.rest.role.name": {
                    "type": "string",
                    "description": "The role's username"
                },
                "gravity.rest.role.type": {
                    "type": "string",
                    "description": "The role's type with keys from  IRole.JsonConstants"
                }
            }
        },
        "Stage": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.stage.description",
                "gravity.rest.stage.id",
                "gravity.rest.stage.is.landing.stage",
                "gravity.rest.stage.is.master",
                "gravity.rest.stage.is.peer",
                "gravity.rest.stage.is.peer.master",
                "gravity.rest.stage.is.plannable",
                "gravity.rest.stage.is.slave",
                "gravity.rest.stage.lifecycle.id",
                "gravity.rest.stage.name",
                "gravity.rest.stage.type"
            ],
            "properties": {
                "gravity.rest.stage.id": {
                    "type": "string",
                    "description": "The stage id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.stage.name": {
                    "type": "string",
                    "description": "The stage name"
                },
                "gravity.rest.stage.lifecycle.id": {
                    "type": "string",
                    "description": "The id of the workflow this stage belongs to"
                },
                "gravity.rest.stage.next.stages.ids": {
                    "type": "array",
                    "description": "A list of id's of next stages",
                    "items": {
                        "type": "string"
                    }
                },
                "gravity.rest.stage.next.stages.names": {
                    "type": "array",
                    "description": "A list of names of next stages",
                    "items": {
                        "type": "string"
                    }
                },
                "gravity.rest.stage.prev.stages.ids": {
                    "type": "array",
                    "description": "A list of id's of previous stages",
                    "items": {
                        "type": "string"
                    }
                },
                "gravity.rest.stage.prev.stages.names": {
                    "type": "array",
                    "description": "A list of names of previous stages",
                    "items": {
                        "type": "string"
                    }
                },
                "gravity.rest.stage.description": {
                    "type": "string",
                    "description": "The stage description"
                },
                "gravity.rest.stage.type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The stage type: PHYSICAL=1, ACTIVITY=2, EVENT=3, INITIAL=4, FINAL=5, STATUS=6, CHANGE_ATTRIBUTE=7"
                },
                "gravity.rest.stage.master.peer.id": {
                    "type": "string",
                    "description": "The id of  the master peer stage, if any"
                },
                "gravity.rest.stage.is.peer": {
                    "type": "boolean",
                    "description": "whether this stage is a peer",
                    "default": false
                },
                "gravity.rest.stage.is.slave": {
                    "type": "boolean",
                    "description": "whether this stage is a slave",
                    "default": false
                },
                "gravity.rest.stage.is.plannable": {
                    "type": "boolean",
                    "description": "whether this stage is plannable",
                    "default": false
                },
                "gravity.rest.stage.is.peer.master": {
                    "type": "boolean",
                    "description": "whether this stage is a master peer",
                    "default": false
                },
                "gravity.rest.stage.is.master": {
                    "type": "boolean",
                    "description": "whether this stage is a master",
                    "default": false
                },
                "gravity.rest.stage.topic": {
                    "type": "string",
                    "description": "The topic used by this stage"
                },
                "gravity.rest.stage.is.landing.stage": {
                    "type": "boolean",
                    "description": "whether this stage is a landing one",
                    "default": false
                },
                "gravity.rest.stage.attribute.modifications": {
                    "type": "array",
                    "description": "The attribute modifications handled by this stage",
                    "items": {
                        "$ref": "#/definitions/Stage Attribute"
                    }
                }
            }
        },
        "Stage Attribute": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.stage.id",
                "gravity.rest.stageAttributeModification.isFieldExended",
                "gravity.rest.stageAttributeModification.name",
                "gravity.rest.stageAttributeModification.stageId",
                "gravity.rest.stageAttributeModification.status",
                "gravity.rest.stageAttributeModification.value",
                "gravity.rest.stageAttributeModification.value.id"
            ],
            "properties": {
                "gravity.rest.stage.id": {
                    "type": "string",
                    "description": "The stage attribute modification entity id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.stageAttributeModification.name": {
                    "type": "string",
                    "description": "The stage attribute modification name"
                },
                "gravity.rest.stageAttributeModification.value": {
                    "type": "string",
                    "description": "The stage attribute modification value"
                },
                "gravity.rest.stageAttributeModification.value.id": {
                    "type": "string",
                    "description": "The stage attribute modification value id if the latter is an entity"
                },
                "gravity.rest.stageAttributeModification.stageId": {
                    "type": "string",
                    "description": "The id of the stage this attribute modification is connected toThe attribute modification is handled by"
                },
                "gravity.rest.stageAttributeModification.status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The change status of this stage attribute modification: CHANGE=1, PRESERVE=2"
                },
                "gravity.rest.stageAttributeModification.isFieldExended": {
                    "type": "boolean",
                    "description": "whether the value of this stage attribute modification is an extended field",
                    "default": false
                }
            }
        },
        "Tag": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.tag.concat.token",
                "gravity.rest.tag.creator.id",
                "gravity.rest.tag.display.name",
                "gravity.rest.tag.id",
                "gravity.rest.tag.is.generated",
                "gravity.rest.tag.name",
                "gravity.rest.tag.type"
            ],
            "properties": {
                "gravity.rest.tag.id": {
                    "type": "string",
                    "description": "The tag id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.tag.name": {
                    "type": "string",
                    "description": "The tag name"
                },
                "gravity.rest.tag.display.name": {
                    "type": "string",
                    "description": "The tag display name"
                },
                "gravity.rest.tag.description": {
                    "type": "string",
                    "description": "The tag description"
                },
                "gravity.rest.tag.type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The tag type: USER=1, SYSTEM=2"
                },
                "gravity.rest.tag.creator.id": {
                    "type": "string",
                    "description": "The tag creator id"
                },
                "gravity.rest.tag.is.generated": {
                    "type": "boolean",
                    "description": "Whether this tag is a generated/system one",
                    "default": false
                },
                "gravity.rest.tag.concat.token": {
                    "type": "string",
                    "description": "The token used to concat a tag and its parent's names for display purpose"
                },
                "gravity.rest.tag.parent": {
                    "description": "The parent of this tag",
                    "$ref": "#/definitions/Tag"
                }
            }
        },
        "Template": {
            "type": "object",
            "required": [
                "gravity.rest.template.content",
                "gravity.rest.template.id",
                "gravity.rest.template.name",
                "gravity.rest.template.parameters",
                "gravity.rest.template.type"
            ],
            "properties": {
                "gravity.rest.template.id": {
                    "type": "string",
                    "description": "The template id"
                },
                "gravity.rest.template.name": {
                    "type": "string",
                    "description": "The template name"
                },
                "gravity.rest.template.description": {
                    "type": "string",
                    "description": "The template description"
                },
                "gravity.rest.template.content": {
                    "type": "string",
                    "description": "The template content"
                },
                "gravity.rest.template.type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The template type: Unknown=1,FreeMarker=2"
                },
                "gravity.rest.template.parameters": {
                    "type": "object",
                    "description": "A map of extra parameters to pass to the template execution runtime",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "Template Output": {
            "type": "object",
            "required": [
                "gravity.rest.gravity.object.id"
            ],
            "properties": {
                "gravity.rest.gravity.object.id": {
                    "type": "string",
                    "description": "Id of this Gravity object"
                },
                "gravity.rest.template.output": {
                    "type": "object",
                    "description": "The template execution output. Arbitrary object"
                },
                "gravity.rest.template.output.code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The template execution output exit code as integer. 1==success. 2==failure. May be some other integer value but 1 and 2 are reserved and always stand for the previously mentioned meanings."
                },
                "gravity.rest.template.output.log": {
                    "type": "string",
                    "description": "The template execution output log"
                },
                "gravity.rest.template.output.is.successful": {
                    "type": "boolean",
                    "description": "Whether the execution of a template was successful",
                    "default": false
                }
            }
        },
        "Transfer Path": {
            "type": "object",
            "required": [
                "gravity.rest.transfer.path.id",
                "gravity.rest.transfer.path.stages",
                "gravity.rest.transfer.path.target.stage"
            ],
            "properties": {
                "gravity.rest.transfer.path.id": {
                    "type": "string",
                    "description": "The id of this transfer path"
                },
                "gravity.rest.transfer.path.name": {
                    "type": "string",
                    "description": "The name of this transfer path"
                },
                "gravity.rest.transfer.path.stages": {
                    "type": "array",
                    "description": "The stages forming this transfer path",
                    "items": {
                        "$ref": "#/definitions/Stage"
                    }
                },
                "gravity.rest.transfer.path.target.stage": {
                    "description": "The target stage in this transfer path",
                    "$ref": "#/definitions/Stage"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.role.name",
                "gravity.rest.role.type",
                "gravity.rest.user.entity.type.name",
                "gravity.rest.user.group.name",
                "gravity.rest.user.has.address",
                "gravity.rest.user.id",
                "gravity.rest.user.isenabled",
                "gravity.rest.user.web.link"
            ],
            "properties": {
                "gravity.rest.user.id": {
                    "type": "string",
                    "description": "The user id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                },
                "gravity.rest.role.name": {
                    "type": "string",
                    "description": "The role's username"
                },
                "gravity.rest.role.type": {
                    "type": "string",
                    "description": "The role's type with keys from  IRole.JsonConstants"
                },
                "gravity.rest.user.address": {
                    "description": "The user address",
                    "$ref": "#/definitions/Address"
                },
                "gravity.rest.user.has.address": {
                    "type": "boolean",
                    "description": "Whether this user has an address",
                    "default": false
                },
                "gravity.rest.user.web.link": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A web link to this user's avatar"
                },
                "gravity.rest.user.group.name": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The name of the group this user belongs tor"
                },
                "gravity.rest.user.isenabled": {
                    "type": "boolean",
                    "description": "Whether this user is enabled",
                    "default": false
                },
                "gravity.rest.user.entity.type.name": {
                    "type": "boolean",
                    "description": "This user's entity type name",
                    "default": false
                }
            }
        },
        "Work Item": {
            "type": "object",
            "required": [
                "gravity.rest.authorizable.name",
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.item.application.id",
                "gravity.rest.item.application.name",
                "gravity.rest.item.creator.name",
                "gravity.rest.item.entity.type.id",
                "gravity.rest.item.istemplate",
                "gravity.rest.item.status.stage.id",
                "gravity.rest.item.status.stage.name",
                "gravity.rest.item.title",
                "gravity.rest.item.workflow.id",
                "gravity.rest.item.workflow.name",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.typeable.simple.class.name"
            ],
            "properties": {
                "gravity.rest.item.id": {
                    "type": "string",
                    "description": "Work item id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.item.istemplate": {
                    "type": "boolean",
                    "description": "Whether this work item is a template",
                    "default": false
                },
                "gravity.rest.authorizable.name": {
                    "type": "string",
                    "description": "The authorizable name"
                },
                "gravity.rest.typeable.simple.class.name": {
                    "type": "string",
                    "description": "Java simple class name of this typeable "
                },
                "gravity.rest.item.entity.type.id": {
                    "type": "string",
                    "description": "The id of the work item type"
                },
                "gravity.rest.item.title": {
                    "type": "string",
                    "description": "Work item title"
                },
                "gravity.rest.item.shorttitle": {
                    "type": "string",
                    "description": "Work item short title"
                },
                "gravity.rest.item.description": {
                    "type": "string",
                    "description": "Work item description"
                },
                "gravity.rest.item.htmldescription": {
                    "type": "string",
                    "description": "Work item HTML description"
                },
                "gravity.rest.item.subject": {
                    "type": "string",
                    "description": "Work item subject"
                },
                "gravity.rest.item.creator.name": {
                    "type": "string",
                    "description": "Work item creator name"
                },
                "gravity.rest.item.priority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Work item priority: VERY_HIGH=1, HIGH=2, NORMAL=3, LOW=4, VERY_LOW=5"
                },
                "gravity.rest.item.severity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Work item severity: BLOCKER=1, CRITICAL=2, MAJOR=3, NORMAL=4, MINOR=5, TRIVIAL=6, ENHANCEMENT=7"
                },
                "gravity.rest.item.modifieddate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item modification date"
                },
                "gravity.rest.item.expected.completiondate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item expected completion date"
                },
                "gravity.rest.item.expected.startdate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item expected start date"
                },
                "gravity.rest.item.expected.enddate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item expected end date"
                },
                "gravity.rest.item.expected.hours": {
                    "type": "number",
                    "format": "double",
                    "description": "Work item expected hours"
                },
                "gravity.rest.item.realized.completiondate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item realized completion date"
                },
                "gravity.rest.item.realized.startdate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item realized start date"
                },
                "gravity.rest.item.realized.enddate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Work item realized end date"
                },
                "gravity.rest.item.realized.hours": {
                    "type": "number",
                    "format": "double",
                    "description": "Work item realized hours"
                },
                "gravity.rest.item.status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Work item status: Unconfirmed=1, New=2, Assigned=3, Reopened=4, Resolved=5, Verified=6, Closed=7"
                },
                "gravity.rest.item.status.stage.name": {
                    "type": "string",
                    "description": "The name of the status stage this work item is within"
                },
                "gravity.rest.item.status.stage.id": {
                    "type": "string",
                    "description": "The id of the status stage this work item is within"
                },
                "gravity.rest.item.application.name": {
                    "type": "string",
                    "description": "The name of the application this work item is managed within"
                },
                "gravity.rest.item.application.id": {
                    "type": "string",
                    "description": "The id of the application this work item is managed within"
                },
                "gravity.rest.item.workflow.name": {
                    "type": "string",
                    "description": "The name of the workflow this work item is managed within"
                },
                "gravity.rest.item.workflow.id": {
                    "type": "string",
                    "description": "The id of the workflow this work item is managed within"
                },
                "gravity.rest.item.assignee.id": {
                    "type": "string",
                    "description": "The id of the user this work item is assigned to"
                },
                "gravity.rest.item.assignee.name": {
                    "type": "string",
                    "description": "The name of the user this work item is assigned to"
                }
            }
        },
        "Work Item TypeSpace": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date"
            ],
            "properties": {
                "gravity.rest.itemtypespace.id": {
                    "type": "string",
                    "description": "Item typeSpace id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.itemtypespace.name": {
                    "type": "string",
                    "description": "Item typeSpace name"
                },
                "gravity.rest.itemtypespace.description": {
                    "type": "string",
                    "description": "Item typeSpace description"
                },
                "gravity.rest.itemtypespace.icon.id": {
                    "type": "string",
                    "description": "Item typeSpace icon id"
                },
                "gravity.rest.itemtypespace.entity.types": {
                    "type": "array",
                    "description": "Entity types within this typeSpace",
                    "items": {
                        "$ref": "#/definitions/Entity Type"
                    }
                }
            }
        },
        "Workflow": {
            "type": "object",
            "required": [
                "gravity.rest.entity.class.name",
                "gravity.rest.entity.version",
                "gravity.rest.extendable.is.template",
                "gravity.rest.persistable.creation.date",
                "gravity.rest.workflow.description",
                "gravity.rest.workflow.id",
                "gravity.rest.workflow.is.master",
                "gravity.rest.workflow.item.type.space",
                "gravity.rest.workflow.item.type.space.id",
                "gravity.rest.workflow.master.id",
                "gravity.rest.workflow.name",
                "gravity.rest.workflow.stages.names"
            ],
            "properties": {
                "gravity.rest.workflow.id": {
                    "type": "string",
                    "description": "The workflow id"
                },
                "gravity.rest.persistable.creation.date": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The creation date of this entity as a numeric (Long) value"
                },
                "gravity.rest.entity.class.name": {
                    "type": "string",
                    "description": "The JAVA class type of this entity"
                },
                "gravity.rest.entity.version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Entity version"
                },
                "gravity.rest.persistable.attachments": {
                    "type": "array",
                    "description": "A collection of attachments belonging to this entity",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "gravity.rest.entity.web.link": {
                    "type": "string",
                    "description": "A web link to this entity"
                },
                "gravity.rest.persistable.is.from.history": {
                    "type": "boolean",
                    "description": "Whether this entity is an old version from history database",
                    "default": false
                },
                "gravity.rest.extendable.is.template": {
                    "type": "boolean",
                    "description": "Whether this entity is a template",
                    "default": false
                },
                "gravity.rest.workflow.name": {
                    "type": "string",
                    "description": "The workflow name"
                },
                "gravity.rest.workflow.description": {
                    "type": "string",
                    "description": "The workflow description"
                },
                "gravity.rest.workflow.master": {
                    "type": "string",
                    "description": "The master workflow. Only  added to the returned result if the boolean paramater [gravity.rest.workflow.include.master.lifecycle] is present in the request and is true"
                },
                "gravity.rest.workflow.master.id": {
                    "type": "string",
                    "description": "The master workflow id"
                },
                "gravity.rest.workflow.is.master": {
                    "type": "boolean",
                    "description": "Whether this workflow is a master one",
                    "default": false
                },
                "gravity.rest.workflow.item.type.space": {
                    "type": "string",
                    "description": "Workflow item typespace. Only  added to the returned result if the boolean paramater [gravity.rest.workflow.include.item.type.space] is present in the request and is true"
                },
                "gravity.rest.workflow.item.type.space.id": {
                    "type": "string",
                    "description": "Workflow item typespace id"
                },
                "gravity.rest.workflow.stages": {
                    "type": "array",
                    "description": "Stages belonging to this Workflow. Only  added to the returned result if the boolean paramater [gravity.rest.workflow.include.stages] is present in the request and is true",
                    "items": {
                        "$ref": "#/definitions/Stage"
                    }
                },
                "gravity.rest.workflow.stages.names": {
                    "type": "array",
                    "description": "Names of all stages belonging to this Workflow.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}

